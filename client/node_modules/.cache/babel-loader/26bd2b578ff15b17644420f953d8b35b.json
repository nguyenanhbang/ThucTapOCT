{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\src\\\\app\\\\views\\\\User\\\\User.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, IconButton, Icon, TablePagination, Button, TextField, InputAdornment, Input } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { findUserByUserName, searchByPage, getItemById, getListHealthOrgByUser, SearchUserByUserName, searchByDto } from \"./UserService\";\nimport UserEditorDialog from \"./UserEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport shortid from \"shortid\";\nimport { saveAs } from \"file-saver\";\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"edit\")));\n}\n\nvar User = /*#__PURE__*/function (_Component) {\n  _inherits(User, _Component);\n\n  function User() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, User);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(User)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      keyword: \"\",\n      rowsPerPage: 10,\n      page: 0,\n      eQAHealthOrgType: [],\n      item: {},\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectAllItem: false,\n      selectedList: [],\n      totalElements: 0,\n      shouldOpenConfirmationDeleteAllDialog: false\n    };\n    _this.numSelected = 0;\n    _this.rowCount = 0;\n\n    _this.handleTextChange = function (event) {\n      _this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === \"Enter\") {\n        _this.search();\n      }\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page: page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {}; //searchObject.text = this.state.keyword;\n\n      searchObject.text = _this.state.keyword.trim();\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      searchByPage(searchObject.pageIndex, searchObject.pageSize).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleDownload = function () {\n      var blob = new Blob([\"Hello, world!\"], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      saveAs(blob, \"hello world.txt\");\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n\n      _this.setPage(0);\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleDeleteUser = function (id) {\n      _this.setState({\n        id: id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleEditUser = function (item) {\n      getItemById(item.id).then(function (result) {\n        _this.setState({\n          item: result.data,\n          shouldOpenEditorDialog: true\n        });\n      });\n    };\n\n    _this.handleEditItem = function (item) {\n      _this.setState({\n        item: item,\n        shouldOpenEditorDialog: true\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id: id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleDeleteAll = function (event) {\n      _this.handleDeleteList(_this.data).then(function () {\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"search\",\n    // search() {\n    //   this.setState({ page: 0 }, function () {\n    //     var searchObject = {};\n    //     searchObject.text = this.state.keyword;\n    //     searchObject.pageIndex = 1;\n    //     searchObject.pageSize = this.state.rowsPerPage;\n    //     findUserByUserName(searchObject.text, searchObject.pageIndex, searchObject.pageSize).then(({ data }) => {\n    //       this.setState({ itemList: [...data.content], totalElements: data.totalElements })\n    //     });\n    //   });\n    // }\n    value: function search() {\n      var _this2 = this;\n\n      this.setState({\n        page: 0\n      }, function () {\n        var searchObject = {};\n        searchObject.text = _this2.state.keyword.trim();\n        searchObject.pageIndex = _this2.state.page + 1;\n        searchObject.pageSize = _this2.state.rowsPerPage;\n        searchByPage(searchObject.pageIndex, searchObject.pageSize).then(function (_ref2) {\n          var data = _ref2.data;\n\n          _this2.setState({\n            itemList: _toConsumableArray(data.content),\n            totalElements: data.totalElements\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          totalElements = _this$state.totalElements,\n          itemList = _this$state.itemList,\n          item = _this$state.item,\n          shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n          shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog,\n          shouldOpenConfirmationDeleteAllDialog = _this$state.shouldOpenConfirmationDeleteAllDialog;\n      var columns = [{\n        title: t(\"Action\"),\n        field: \"custom\",\n        align: \"left\",\n        width: \"250\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(MaterialButton, {\n            item: rowData,\n            onSelect: function onSelect(rowData, method) {\n              if (method === 0) {\n                getItemById(rowData.id).then(function (_ref3) {\n                  var data = _ref3.data;\n\n                  if (data.parent === null) {\n                    data.parent = {};\n                  }\n\n                  _this3.setState({\n                    item: data,\n                    shouldOpenEditorDialog: true\n                  });\n                });\n              } else if (method === 1) {\n                _this3.handleDelete(rowData.id);\n              } else {\n                alert(\"Call Selected Here:\" + rowData.id);\n              }\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 21\n            }\n          });\n        }\n      }, {\n        title: t(\"username\"),\n        field: \"username\",\n        width: \"150\"\n      }, {\n        title: t(\"user.displayName\"),\n        field: \"person.displayName\",\n        width: \"150\"\n      }, {\n        title: t(\"general.email\"),\n        field: \"email\",\n        align: \"left\",\n        width: \"150\"\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"Dashboard.manage\"),\n          path: \"/directory/apartment\"\n        }, {\n          name: t(\"user.title\")\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 5,\n        md: 5,\n        sm: 5,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this3.handleEditItem({\n            startDate: new Date(),\n            endDate: new Date(),\n            isAddNew: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }\n      }, t(\"Add\")), shouldOpenConfirmationDeleteAllDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: shouldOpenConfirmationDeleteAllDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleDeleteAll,\n        text: t(\"DeleteAllConfirm\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }\n      }, shouldOpenEditorDialog && /*#__PURE__*/React.createElement(UserEditorDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenEditorDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 29\n        }\n      }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: t(\"DeleteConfirm\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t(\"List\"),\n        data: itemList,\n        columns: columns //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n        ,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        } // options={{\n        //   selection: false,\n        //   actionsColumnIndex: 0,\n        //   paging: false,\n        //   search: false\n        // }}\n        ,\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 49\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this3.data = rows; // this.setState({selectedItems:rows});\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\"\n            };\n          },\n          maxBodyHeight: \"450px\",\n          minBodyHeight: \"370px\",\n          headerStyle: {\n            backgroundColor: \"#358600\",\n            color: \"#fff\"\n          },\n          padding: \"dense\",\n          toolbar: false\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25, 50, 100],\n        component: \"div\",\n        labelRowsPerPage: t(\"general.rows_per_page\"),\n        labelDisplayedRows: function labelDisplayedRows(_ref4) {\n          var from = _ref4.from,\n              to = _ref4.to,\n              count = _ref4.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t(\"general.of\"), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: totalElements,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nexport default User;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/employee-main/client/src/app/views/User/User.jsx"],"names":["React","Component","Grid","IconButton","Icon","TablePagination","Button","TextField","InputAdornment","Input","Link","SearchIcon","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","findUserByUserName","searchByPage","getItemById","getListHealthOrgByUser","SearchUserByUserName","searchByDto","UserEditorDialog","Breadcrumb","ConfirmationDialog","useTranslation","withTranslation","Trans","shortid","saveAs","MaterialButton","props","t","i18n","item","onSelect","User","state","keyword","rowsPerPage","page","eQAHealthOrgType","shouldOpenEditorDialog","shouldOpenConfirmationDialog","selectAllItem","selectedList","totalElements","shouldOpenConfirmationDeleteAllDialog","numSelected","rowCount","handleTextChange","event","setState","target","value","handleKeyDownEnterSearch","e","key","search","setPage","updatePageData","setRowsPerPage","handleChangePage","newPage","searchObject","text","trim","pageIndex","pageSize","then","data","itemList","content","handleDownload","blob","Blob","type","handleDialogClose","handleOKEditClose","handleDeleteUser","id","handleEditUser","result","handleEditItem","handleDelete","handleDeleteAll","handleDeleteList","columns","title","field","align","width","render","rowData","method","parent","alert","name","path","startDate","Date","endDate","isAddNew","handleConfirmationResponse","row","rows","list","find","a","parentId","Toolbar","selection","actionsColumnIndex","paging","rowStyle","index","backgroundColor","maxBodyHeight","minBodyHeight","headerStyle","color","padding","toolbar","body","emptyDataSourceMessage","from","to","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Grid,\n    IconButton,\n    Icon,\n    TablePagination,\n    Button,\n    TextField,\n    InputAdornment,\n    Input,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MaterialTable, {\n    MTableToolbar,\n    Chip,\n    MTableBody,\n    MTableHeader,\n} from \"material-table\";\nimport {\n    findUserByUserName,\n    searchByPage,\n    getItemById,\n    getListHealthOrgByUser,\n    SearchUserByUserName,\n    searchByDto,\n} from \"./UserService\";\nimport UserEditorDialog from \"./UserEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport shortid from \"shortid\";\nimport { saveAs } from \"file-saver\";\n\nfunction MaterialButton(props) {\n    const { t, i18n } = useTranslation();\n    const item = props.item;\n    return (\n        <div>\n            <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\n                <Icon fontSize=\"small\" color=\"primary\">\n                    edit\n                </Icon>\n            </IconButton>\n            {/* <IconButton onClick={() => props.onSelect(item, 1)}>\n      <Icon color=\"error\">delete</Icon>\n    </IconButton> */}\n        </div>\n    );\n}\n\nclass User extends Component {\n    state = {\n        keyword: \"\",\n        rowsPerPage: 10,\n        page: 0,\n        eQAHealthOrgType: [],\n        item: {},\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        selectAllItem: false,\n        selectedList: [],\n        totalElements: 0,\n        shouldOpenConfirmationDeleteAllDialog: false,\n    };\n    numSelected = 0;\n    rowCount = 0;\n\n    handleTextChange = (event) => {\n        this.setState({ keyword: event.target.value }, function () {});\n    };\n\n    handleKeyDownEnterSearch = (e) => {\n        if (e.key === \"Enter\") {\n            this.search();\n        }\n    };\n\n    setPage = (page) => {\n        this.setState({ page }, function () {\n            this.updatePageData();\n        });\n    };\n\n    setRowsPerPage = (event) => {\n        this.setState(\n            { rowsPerPage: event.target.value, page: 0 },\n            function () {\n                this.updatePageData();\n            }\n        );\n    };\n\n    handleChangePage = (event, newPage) => {\n        this.setPage(newPage);\n    };\n\n    // search() {\n    //   this.setState({ page: 0 }, function () {\n    //     var searchObject = {};\n    //     searchObject.text = this.state.keyword;\n    //     searchObject.pageIndex = 1;\n    //     searchObject.pageSize = this.state.rowsPerPage;\n    //     findUserByUserName(searchObject.text, searchObject.pageIndex, searchObject.pageSize).then(({ data }) => {\n    //       this.setState({ itemList: [...data.content], totalElements: data.totalElements })\n    //     });\n    //   });\n    // }\n    search() {\n        this.setState({ page: 0 }, () => {\n            var searchObject = {};\n            searchObject.text = this.state.keyword.trim();\n            searchObject.pageIndex = this.state.page + 1;\n            searchObject.pageSize = this.state.rowsPerPage;\n            searchByPage(searchObject.pageIndex, searchObject.pageSize).then(\n                ({ data }) => {\n                    this.setState({\n                        itemList: [...data.content],\n                        totalElements: data.totalElements,\n                    });\n                }\n            );\n        });\n    }\n\n    updatePageData = () => {\n        var searchObject = {};\n        //searchObject.text = this.state.keyword;\n        searchObject.text = this.state.keyword.trim();\n        searchObject.pageIndex = this.state.page + 1;\n        searchObject.pageSize = this.state.rowsPerPage;\n\n        searchByPage(searchObject.pageIndex, searchObject.pageSize).then(\n            ({ data }) => {\n                this.setState({\n                    itemList: [...data.content],\n                    totalElements: data.totalElements,\n                });\n            }\n        );\n    };\n\n    handleDownload = () => {\n        var blob = new Blob([\"Hello, world!\"], {\n            type: \"text/plain;charset=utf-8\",\n        });\n        saveAs(blob, \"hello world.txt\");\n    };\n    handleDialogClose = () => {\n        this.setState({\n            shouldOpenEditorDialog: false,\n            shouldOpenConfirmationDialog: false,\n            shouldOpenConfirmationDeleteAllDialog: false,\n        });\n        this.setPage(0);\n    };\n\n    handleOKEditClose = () => {\n        this.setState({\n            shouldOpenEditorDialog: false,\n            shouldOpenConfirmationDialog: false,\n        });\n        this.updatePageData();\n    };\n\n    handleDeleteUser = (id) => {\n        this.setState({\n            id,\n            shouldOpenConfirmationDialog: true,\n        });\n    };\n\n    handleEditUser = (item) => {\n        getItemById(item.id).then((result) => {\n            this.setState({\n                item: result.data,\n                shouldOpenEditorDialog: true,\n            });\n        });\n    };\n\n    componentDidMount() {\n        this.updatePageData();\n    }\n\n    handleEditItem = (item) => {\n        this.setState({\n            item: item,\n            shouldOpenEditorDialog: true,\n        });\n    };\n\n    handleDelete = (id) => {\n        this.setState({\n            id,\n            shouldOpenConfirmationDialog: true,\n        });\n    };\n\n    handleDeleteAll = (event) => {\n        this.handleDeleteList(this.data).then(() => {\n            this.updatePageData();\n            this.handleDialogClose();\n        });\n    };\n\n    render() {\n        const { t, i18n } = this.props;\n        let {\n            keyword,\n            rowsPerPage,\n            page,\n            totalElements,\n            itemList,\n            item,\n            shouldOpenConfirmationDialog,\n            shouldOpenEditorDialog,\n            shouldOpenConfirmationDeleteAllDialog,\n        } = this.state;\n\n        let columns = [\n            {\n                title: t(\"Action\"),\n                field: \"custom\",\n                align: \"left\",\n                width: \"250\",\n                render: (rowData) => (\n                    <MaterialButton\n                        item={rowData}\n                        onSelect={(rowData, method) => {\n                            if (method === 0) {\n                                getItemById(rowData.id).then(({ data }) => {\n                                    if (data.parent === null) {\n                                        data.parent = {};\n                                    }\n                                    this.setState({\n                                        item: data,\n                                        shouldOpenEditorDialog: true,\n                                    });\n                                });\n                            } else if (method === 1) {\n                                this.handleDelete(rowData.id);\n                            } else {\n                                alert(\"Call Selected Here:\" + rowData.id);\n                            }\n                        }}\n                    />\n                ),\n            },\n            { title: t(\"username\"), field: \"username\", width: \"150\" },\n            {\n                title: t(\"user.displayName\"),\n                field: \"person.displayName\",\n                width: \"150\",\n            },\n            {\n                title: t(\"general.email\"),\n                field: \"email\",\n                align: \"left\",\n                width: \"150\",\n            },\n        ];\n\n        return (\n            <div className=\"m-sm-30\">\n                <div className=\"mb-sm-30\">\n                    <Breadcrumb\n                        routeSegments={[\n                            {\n                                name: t(\"Dashboard.manage\"),\n                                path: \"/directory/apartment\",\n                            },\n                            { name: t(\"user.title\") },\n                        ]}\n                    />\n                </div>\n\n                <Grid container spacing={3}>\n                    <Grid item lg={5} md={5} sm={5} xs={12}>\n                        <Button\n                            className=\"mb-16 mr-16 align-bottom\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                this.handleEditItem({\n                                    startDate: new Date(),\n                                    endDate: new Date(),\n                                    isAddNew: true,\n                                });\n                            }}>\n                            {t(\"Add\")}\n                        </Button>\n                        {shouldOpenConfirmationDeleteAllDialog && (\n                            <ConfirmationDialog\n                                open={shouldOpenConfirmationDeleteAllDialog}\n                                onConfirmDialogClose={this.handleDialogClose}\n                                onYesClick={this.handleDeleteAll}\n                                text={t(\"DeleteAllConfirm\")}\n                            />\n                        )}\n                    </Grid>\n                    {/* <TextField\n                        label={t(\"EnterSearch\")}\n                        className=\"mb-16 mr-10\"\n                        type=\"text\"\n                        name=\"keyword\"\n                        value={keyword}\n                        onKeyDown={this.handleKeyDownEnterSearch}\n                        onChange={this.handleTextChange}\n                    />\n                    <Button\n                        className=\"mb-16 mr-16 align-bottom\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => this.search(keyword)}>\n                        {t(\"Search\")}\n                    </Button>\n\n                    <Grid item lg={7} md={7} sm={7} xs={12}>\n                        <Input\n                            label={t(\"EnterSearch\")}\n                            type=\"text\"\n                            name=\"keyword\"\n                            value={keyword}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleKeyDownEnterSearch}\n                            className=\"w-100 mb-16 mr-10 stylePlaceholder\"\n                            id=\"search_box\"\n                            placeholder={t(\"general.enterSearch\")}\n                            startAdornment={\n                                <InputAdornment>\n                                    <Link to=\"#\">\n                                        <SearchIcon\n                                            onClick={() => this.search(keyword)}\n                                            style={{\n                                                position: \"absolute\",\n                                                top: \"0\",\n                                                right: \"0\",\n                                            }}\n                                        />\n                                    </Link>\n                                </InputAdornment>\n                            }\n                        />\n                          </Grid>*/}\n                </Grid> \n                <Grid item xs={12}>\n                    <div>\n                        {shouldOpenEditorDialog && (\n                            <UserEditorDialog\n                                t={t}\n                                i18n={i18n}\n                                handleClose={this.handleDialogClose}\n                                open={shouldOpenEditorDialog}\n                                handleOKEditClose={this.handleOKEditClose}\n                                item={item}\n                            />\n                        )}\n\n                        {shouldOpenConfirmationDialog && (\n                            <ConfirmationDialog\n                                title={t(\"confirm\")}\n                                open={shouldOpenConfirmationDialog}\n                                onConfirmDialogClose={this.handleDialogClose}\n                                onYesClick={this.handleConfirmationResponse}\n                                text={t(\"DeleteConfirm\")}\n                            />\n                        )}\n                    </div>\n                    <MaterialTable\n                        title={t(\"List\")}\n                        data={itemList}\n                        columns={columns}\n                        //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n                        parentChildData={(row, rows) => {\n                            var list = rows.find((a) => a.id === row.parentId);\n                            return list;\n                        }}\n                        // options={{\n                        //   selection: false,\n                        //   actionsColumnIndex: 0,\n                        //   paging: false,\n                        //   search: false\n                        // }}\n                        components={{\n                            Toolbar: (props) => <MTableToolbar {...props} />,\n                        }}\n                        onSelectionChange={(rows) => {\n                            this.data = rows;\n                            // this.setState({selectedItems:rows});\n                        }}\n                        options={{\n                            selection: false,\n                            actionsColumnIndex: -1,\n                            paging: false,\n                            search: false,\n                            rowStyle: (rowData, index) => ({\n                                backgroundColor:\n                                    index % 2 === 1 ? \"#EEE\" : \"#FFF\",\n                            }),\n                            maxBodyHeight: \"450px\",\n                            minBodyHeight: \"370px\",\n                            headerStyle: {\n                                backgroundColor: \"#358600\",\n                                color: \"#fff\",\n                            },\n                            padding: \"dense\",\n                            toolbar: false,\n                        }}\n                        localization={{\n                            body: {\n                                emptyDataSourceMessage: `${t(\n                                    \"general.emptyDataMessageTable\"\n                                )}`,\n                            },\n                        }}\n                    />\n                    <TablePagination\n                        align=\"left\"\n                        className=\"px-16\"\n                        rowsPerPageOptions={[1, 2, 3, 5, 10, 25, 50, 100]}\n                        component=\"div\"\n                        labelRowsPerPage={t(\"general.rows_per_page\")}\n                        labelDisplayedRows={({ from, to, count }) =>\n                            `${from}-${to} ${t(\"general.of\")} ${\n                                count !== -1 ? count : `more than ${to}`\n                            }`\n                        }\n                        count={totalElements}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        backIconButtonProps={{\n                            \"aria-label\": \"Previous Page\",\n                        }}\n                        nextIconButtonProps={{\n                            \"aria-label\": \"Next Page\",\n                        }}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={this.setRowsPerPage}\n                    />\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}