{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\src\\\\egret\\\\components\\\\EgretVerticalNav\\\\EgretVerticalNav.jsx\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Icon } from \"@material-ui/core\";\nimport TouchRipple from \"@material-ui/core/ButtonBase\";\nimport EgretVerticalNavExpansionPanel from \"./EgretVerticalNavExpansionPanel\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport ConstantList from \"../../../app/appConfig.js\";\nvar ViewEgretVerticalNavExpansionPanel = withTranslation()(EgretVerticalNavExpansionPanel);\n\nvar styles = function styles(theme) {\n  return {\n    expandIcon: {\n      transition: \"transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms\",\n      transform: \"rotate(90deg)\"\n    },\n    collapseIcon: {\n      transition: \"transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms\",\n      transform: \"rotate(0deg)\"\n    }\n  };\n};\n\nvar EgretVerticalNav = /*#__PURE__*/function (_Component) {\n  _inherits(EgretVerticalNav, _Component);\n\n  function EgretVerticalNav() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EgretVerticalNav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EgretVerticalNav)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      collapsed: true\n    };\n\n    _this.renderLevels = function (data) {\n      var _this$props = _this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n,\n          classes = _this$props.classes;\n      return data.map(function (item, index) {\n        if (item.path && item.path.length > 0 && !item.path.startsWith(ConstantList.ROOT_PATH)) {\n          item.path = ConstantList.ROOT_PATH + item.path;\n        }\n\n        var visible = item.isVisible;\n\n        if (item.children && item.children.length > 0) {\n          return /*#__PURE__*/React.createElement(ViewEgretVerticalNavExpansionPanel, {\n            item: item,\n            key: index,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 11\n            }\n          }, _this.renderLevels(item.children));\n        } else if (visible) {\n          if (item.path == null) {\n            item.path = \"\";\n          }\n\n          return /*#__PURE__*/React.createElement(NavLink, {\n            key: index,\n            to: item.path,\n            className: \"nav-item\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(TouchRipple, {\n            key: item.name,\n            name: \"child\",\n            className: \"w-100\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }\n          }, function () {\n            if (item.icon) {\n              return /*#__PURE__*/React.createElement(Icon, {\n                className: \"item-icon text-middle\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 21\n                }\n              }, item.icon);\n            } else {\n              return /*#__PURE__*/React.createElement(\"span\", {\n                className: \"item-icon icon-text\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }\n              }, item.iconText);\n            }\n          }(), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"text-middle pl-20 item-text\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }\n          }, t(item.name)), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"mx-auto\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }\n          }), item.badge && /*#__PURE__*/React.createElement(\"div\", {\n            className: \"badge bg-\".concat(item.badge.color),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }\n          }, item.badge.value)));\n        }\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        collapsed: !_this.state.collapsed\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EgretVerticalNav, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navigation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, this.renderLevels(this.props.navigation));\n    }\n  }]);\n\n  return EgretVerticalNav;\n}(Component);\n\nexport default withStyles(styles)(EgretVerticalNav);","map":{"version":3,"sources":["C:/Users/ducbang/Desktop/12345/employee/client/src/egret/components/EgretVerticalNav/EgretVerticalNav.jsx"],"names":["React","Component","NavLink","Icon","TouchRipple","EgretVerticalNavExpansionPanel","withStyles","useTranslation","withTranslation","Trans","ConstantList","ViewEgretVerticalNavExpansionPanel","styles","theme","expandIcon","transition","transform","collapseIcon","EgretVerticalNav","state","collapsed","renderLevels","data","props","t","i18n","classes","map","item","index","path","length","startsWith","ROOT_PATH","visible","isVisible","children","name","icon","iconText","badge","color","value","handleClick","setState","navigation"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,8BAAP,MAA2C,kCAA3C;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,IAAMC,kCAAkC,GAAGH,eAAe,GACxDH,8BADwD,CAA1D;;AAGA,IAAMO,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,UAAU,EAAE,gDADF;AAEVC,MAAAA,SAAS,EAAE;AAFD,KADW;AAKvBC,IAAAA,YAAY,EAAE;AACZF,MAAAA,UAAU,EAAE,gDADA;AAEZC,MAAAA,SAAS,EAAE;AAFC;AALS,GAAL;AAAA,CAApB;;IAWME,gB;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE;AADL,K;;UAIRC,Y,GAAe,UAAAC,IAAI,EAAI;AAAA,wBACQ,MAAKC,KADb;AAAA,UACbC,CADa,eACbA,CADa;AAAA,UACVC,IADU,eACVA,IADU;AAAA,UACJC,OADI,eACJA,OADI;AAErB,aAAOJ,IAAI,CAACK,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC/B,YACED,IAAI,CAACE,IAAL,IAAaF,IAAI,CAACE,IAAL,CAAUC,MAAV,GAAmB,CAAhC,IACA,CAACH,IAAI,CAACE,IAAL,CAAUE,UAAV,CAAqBtB,YAAY,CAACuB,SAAlC,CAFH,EAGE;AACAL,UAAAA,IAAI,CAACE,IAAL,GAAYpB,YAAY,CAACuB,SAAb,GAAyBL,IAAI,CAACE,IAA1C;AACD;;AACD,YAAII,OAAO,GAAGN,IAAI,CAACO,SAAnB;;AACA,YAAIP,IAAI,CAACQ,QAAL,IAAiBR,IAAI,CAACQ,QAAL,CAAcL,MAAd,GAAuB,CAA5C,EAA+C;AAC7C,8BACE,oBAAC,kCAAD;AAAoC,YAAA,IAAI,EAAEH,IAA1C;AAAgD,YAAA,GAAG,EAAEC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,MAAKR,YAAL,CAAkBO,IAAI,CAACQ,QAAvB,CADH,CADF;AAKD,SAND,MAMO,IAAIF,OAAJ,EAAa;AAClB,cAAIN,IAAI,CAACE,IAAL,IAAa,IAAjB,EAAuB;AACrBF,YAAAA,IAAI,CAACE,IAAL,GAAY,EAAZ;AACD;;AACD,8BACE,oBAAC,OAAD;AAAS,YAAA,GAAG,EAAED,KAAd;AAAqB,YAAA,EAAE,EAAED,IAAI,CAACE,IAA9B;AAAoC,YAAA,SAAS,EAAC,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,WAAD;AAAa,YAAA,GAAG,EAAEF,IAAI,CAACS,IAAvB;AAA6B,YAAA,IAAI,EAAC,OAAlC;AAA0C,YAAA,SAAS,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,YAAM;AACN,gBAAIT,IAAI,CAACU,IAAT,EAAe;AACb,kCACE,oBAAC,IAAD;AAAM,gBAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAyCV,IAAI,CAACU,IAA9C,CADF;AAGD,aAJD,MAIO;AACL,kCACE;AAAM,gBAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAuCV,IAAI,CAACW,QAA5C,CADF;AAGD;AACF,WAVA,EADH,eAYE;AAAM,YAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGf,CAAC,CAACI,IAAI,CAACS,IAAN,CADJ,CAZF,eAeE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,EAgBGT,IAAI,CAACY,KAAL,iBACC;AAAK,YAAA,SAAS,qBAAcZ,IAAI,CAACY,KAAL,CAAWC,KAAzB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGb,IAAI,CAACY,KAAL,CAAWE,KADd,CAjBJ,CADF,CADF;AA0BD;AACF,OA7CM,CAAP;AA8CD,K;;UAEDC,W,GAAc,YAAM;AAClB,YAAKC,QAAL,CAAc;AAAExB,QAAAA,SAAS,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAAzB,OAAd;AACD,K;;;;;;;6BAEQ;AACP,0BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,YAAL,CAAkB,KAAKE,KAAL,CAAWsB,UAA7B,CADH,CADF;AAKD;;;;EAjE4B5C,S;;AAoE/B,eAAeK,UAAU,CAACM,MAAD,CAAV,CAAmBM,gBAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport TouchRipple from \"@material-ui/core/ButtonBase\";\r\nimport EgretVerticalNavExpansionPanel from \"./EgretVerticalNavExpansionPanel\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\nimport ConstantList from \"../../../app/appConfig.js\";\r\nconst ViewEgretVerticalNavExpansionPanel = withTranslation()(\r\n  EgretVerticalNavExpansionPanel\r\n);\r\nconst styles = theme => ({\r\n  expandIcon: {\r\n    transition: \"transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms\",\r\n    transform: \"rotate(90deg)\"\r\n  },\r\n  collapseIcon: {\r\n    transition: \"transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms\",\r\n    transform: \"rotate(0deg)\"\r\n  }\r\n});\r\n\r\nclass EgretVerticalNav extends Component {\r\n  state = {\r\n    collapsed: true\r\n  };\r\n\r\n  renderLevels = data => {\r\n    const { t, i18n, classes } = this.props;\r\n    return data.map((item, index) => {\r\n      if (\r\n        item.path && item.path.length > 0 &&\r\n        !item.path.startsWith(ConstantList.ROOT_PATH)\r\n      ) {\r\n        item.path = ConstantList.ROOT_PATH + item.path;\r\n      }\r\n      let visible = item.isVisible;\r\n      if (item.children && item.children.length > 0) {\r\n        return (\r\n          <ViewEgretVerticalNavExpansionPanel item={item} key={index}>\r\n            {this.renderLevels(item.children)}\r\n          </ViewEgretVerticalNavExpansionPanel>\r\n        );\r\n      } else if (visible) {\r\n        if (item.path == null) {\r\n          item.path = \"\";\r\n        }\r\n        return (\r\n          <NavLink key={index} to={item.path} className=\"nav-item\">\r\n            <TouchRipple key={item.name} name=\"child\" className=\"w-100\">\r\n              {(() => {\r\n                if (item.icon) {\r\n                  return (\r\n                    <Icon className=\"item-icon text-middle\">{item.icon}</Icon>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <span className=\"item-icon icon-text\">{item.iconText}</span>\r\n                  );\r\n                }\r\n              })()}\r\n              <span className=\"text-middle pl-20 item-text\">\r\n                {t(item.name)}\r\n              </span>\r\n              <div className=\"mx-auto\"></div>\r\n              {item.badge && (\r\n                <div className={`badge bg-${item.badge.color}`}>\r\n                  {item.badge.value}\r\n                </div>\r\n              )}\r\n            </TouchRipple>\r\n          </NavLink>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ collapsed: !this.state.collapsed });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navigation\">\r\n        {this.renderLevels(this.props.navigation)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(EgretVerticalNav);\r\n"]},"metadata":{},"sourceType":"module"}