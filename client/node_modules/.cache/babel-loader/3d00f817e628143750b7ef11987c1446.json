{"ast":null,"code":"import * as React from 'react';\nimport Year from './Year';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../../_shared/hooks/useUtils';\nimport { VariantContext } from '../../wrappers/Wrapper';\nexport var useStyles = makeStyles({\n  container: {\n    height: 300,\n    overflowY: 'auto'\n  }\n}, {\n  name: 'MuiPickersYearSelection'\n});\nexport var YearSelection = function YearSelection(_ref) {\n  var date = _ref.date,\n      onChange = _ref.onChange,\n      onYearChange = _ref.onYearChange,\n      minDate = _ref.minDate,\n      maxDate = _ref.maxDate,\n      disablePast = _ref.disablePast,\n      disableFuture = _ref.disableFuture,\n      animateYearScrolling = _ref.animateYearScrolling;\n  var utils = useUtils();\n  var classes = useStyles();\n  var currentVariant = React.useContext(VariantContext);\n  var selectedYearRef = React.useRef(null);\n  React.useEffect(function () {\n    if (selectedYearRef.current && selectedYearRef.current.scrollIntoView) {\n      selectedYearRef.current.scrollIntoView({\n        block: currentVariant === 'static' ? 'nearest' : 'center',\n        behavior: animateYearScrolling ? 'smooth' : 'auto'\n      });\n    }\n  }, []); // eslint-disable-line\n\n  var currentYear = utils.getYear(date);\n  var onYearSelect = React.useCallback(function (year) {\n    var newDate = utils.setYear(date, year);\n\n    if (onYearChange) {\n      onYearChange(newDate);\n    }\n\n    onChange(newDate, true);\n  }, [date, onChange, onYearChange, utils]);\n  return React.createElement(\"div\", {\n    className: classes.container\n  }, utils.getYearRange(minDate, maxDate).map(function (year) {\n    var yearNumber = utils.getYear(year);\n    var selected = yearNumber === currentYear;\n    return React.createElement(Year, {\n      key: utils.getYearText(year),\n      selected: selected,\n      value: yearNumber,\n      onSelect: onYearSelect,\n      ref: selected ? selectedYearRef : undefined,\n      disabled: Boolean(disablePast && utils.isBeforeYear(year, utils.date()) || disableFuture && utils.isAfterYear(year, utils.date()))\n    }, utils.getYearText(year));\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}