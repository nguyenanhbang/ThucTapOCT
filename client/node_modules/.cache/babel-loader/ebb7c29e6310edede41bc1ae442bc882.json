{"ast":null,"code":"import requiredArgs from \"../_lib/requiredArgs/index.js\"; // Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n// 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n\nvar yearInDays = 365.2425;\n/**\r\n * @name milliseconds\r\n * @category Millisecond Helpers\r\n * @summary Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\r\n *\r\n * One years equals 365.2425 days according to the formula:\r\n *\r\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\r\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\r\n *\r\n * One month is a year devided by 12.\r\n *\r\n * @description\r\n * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\r\n *\r\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\r\n * @returns {number} the milliseconds\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // 1 year in milliseconds\r\n * milliseconds({ year: 1 })\r\n * //=> 31556952000\r\n *\r\n * // 3 months in milliseconds\r\n * milliseconds({ month: 3 })\r\n * //=> 7889238000\r\n */\n\nexport default function milliseconds(_ref) {\n  var years = _ref.years,\n      months = _ref.months,\n      weeks = _ref.weeks,\n      days = _ref.days,\n      hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds;\n  requiredArgs(1, arguments);\n  var totalDays = 0;\n  if (years) totalDays += years * yearInDays;\n  if (months) totalDays += months * (yearInDays / 12);\n  if (weeks) totalDays += weeks * 7;\n  if (days) totalDays += days;\n  var totalSeconds = totalDays * 24 * 60 * 60;\n  if (hours) totalSeconds += hours * 60 * 60;\n  if (minutes) totalSeconds += minutes * 60;\n  if (seconds) totalSeconds += seconds;\n  return Math.round(totalSeconds * 1000);\n}","map":null,"metadata":{},"sourceType":"module"}