{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getEmployeesSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getEmployeeByIdSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(createEmployeeSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(updateEmployeeSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(deleteEmployeeByIdSaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchEmployeeAsync);\n\nimport { getEmployeesAPI, getEmployeeByIdAPI, createEmployeeAPI, updateEmployeeAPI, deleteEmployeeByIdAPI } from './apis/index';\nimport { setEmployeeSlice } from './slice/employee';\nimport { addEmployeeSlice, deleteEmployeeSlice, editEmployeeSlice, getEmployeeSlice } from './slice/employees';\nimport { CREATE_EMPLOYEE, DELETE_EMPLOYEE_BY_ID, GET_EMPLOYEE, GET_EMPLOYEE_BY_ID, UPDATE_EMPLOYEE_BY_ID } from './types';\nimport { put, takeEvery } from 'redux-saga/effects';\nexport function getEmployeesSaga() {\n  var employees;\n  return _regeneratorRuntime.wrap(function getEmployeesSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return getEmployeesAPI();\n\n        case 2:\n          employees = _context.sent;\n          _context.next = 5;\n          return put(getEmployeeSlice(employees.data));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function getEmployeeByIdSaga(action) {\n  return _regeneratorRuntime.wrap(function getEmployeeByIdSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return getEmployeeByIdAPI(action.id);\n\n        case 2:\n          _context2.next = 4;\n          return put(setEmployeeSlice(action.id));\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function createEmployeeSaga(action) {\n  return _regeneratorRuntime.wrap(function createEmployeeSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return createEmployeeAPI(action.employee);\n\n        case 2:\n          _context3.next = 4;\n          return put(addEmployeeSlice(action.employee));\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function updateEmployeeSaga(action) {\n  return _regeneratorRuntime.wrap(function updateEmployeeSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return updateEmployeeAPI(action.employee);\n\n        case 2:\n          _context4.next = 4;\n          return put(editEmployeeSlice(action.employee));\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function deleteEmployeeByIdSaga(action) {\n  return _regeneratorRuntime.wrap(function deleteEmployeeByIdSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return deleteEmployeeByIdAPI(action.id);\n\n        case 2:\n          _context5.next = 4;\n          return put(deleteEmployeeSlice(action.id));\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\nexport function watchEmployeeAsync() {\n  return _regeneratorRuntime.wrap(function watchEmployeeAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(GET_EMPLOYEE, getEmployeesSaga);\n\n        case 2:\n          _context6.next = 4;\n          return takeEvery(GET_EMPLOYEE_BY_ID, getEmployeeByIdSaga);\n\n        case 4:\n          _context6.next = 6;\n          return takeEvery(CREATE_EMPLOYEE, createEmployeeSaga);\n\n        case 6:\n          _context6.next = 8;\n          return takeEvery(UPDATE_EMPLOYEE_BY_ID, updateEmployeeSaga);\n\n        case 8:\n          _context6.next = 10;\n          return takeEvery(DELETE_EMPLOYEE_BY_ID, deleteEmployeeByIdSaga);\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}","map":{"version":3,"sources":["C:/Users/ducbang/Desktop/12345/employee/client/src/app/redux/saga/employee.js"],"names":["getEmployeesSaga","getEmployeeByIdSaga","createEmployeeSaga","updateEmployeeSaga","deleteEmployeeByIdSaga","watchEmployeeAsync","getEmployeesAPI","getEmployeeByIdAPI","createEmployeeAPI","updateEmployeeAPI","deleteEmployeeByIdAPI","setEmployeeSlice","addEmployeeSlice","deleteEmployeeSlice","editEmployeeSlice","getEmployeeSlice","CREATE_EMPLOYEE","DELETE_EMPLOYEE_BY_ID","GET_EMPLOYEE","GET_EMPLOYEE_BY_ID","UPDATE_EMPLOYEE_BY_ID","put","takeEvery","employees","data","action","id","employee"],"mappings":";;oDAMiBA,gB;qDAKAC,mB;qDAKAC,kB;qDAKAC,kB;qDAKAC,sB;qDAKAC,kB;;AA/BjB,SAAQC,eAAR,EAAyBC,kBAAzB,EAA6CC,iBAA7C,EAAgEC,iBAAhE,EAAmFC,qBAAnF,QAA+G,cAA/G;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,iBAAhD,EAAmEC,gBAAnE,QAA2F,mBAA3F;AACA,SAASC,eAAT,EAA0BC,qBAA1B,EAAiDC,YAAjD,EAA+DC,kBAA/D,EAAmFC,qBAAnF,QAAgH,SAAhH;AACA,SAAQC,GAAR,EAAaC,SAAb,QAA8B,oBAA9B;AAEA,OAAO,SAAUtB,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACe,iBAAMM,eAAe,EAArB;;AADf;AACGiB,UAAAA,SADH;AAAA;AAEH,iBAAMF,GAAG,CAACN,gBAAgB,CAACQ,SAAS,CAACC,IAAX,CAAjB,CAAT;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKP,OAAO,SAAUvB,mBAAV,CAA+BwB,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMlB,kBAAkB,CAACkB,MAAM,CAACC,EAAR,CAAxB;;AADG;AAAA;AAEH,iBAAML,GAAG,CAACV,gBAAgB,CAACc,MAAM,CAACC,EAAR,CAAjB,CAAT;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKP,OAAO,SAAUxB,kBAAV,CAA+BuB,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMjB,iBAAiB,CAACiB,MAAM,CAACE,QAAR,CAAvB;;AADG;AAAA;AAEH,iBAAMN,GAAG,CAACT,gBAAgB,CAACa,MAAM,CAACE,QAAR,CAAjB,CAAT;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKP,OAAO,SAAUxB,kBAAV,CAA6BsB,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMhB,iBAAiB,CAACgB,MAAM,CAACE,QAAR,CAAvB;;AADG;AAAA;AAEH,iBAAMN,GAAG,CAACP,iBAAiB,CAACW,MAAM,CAACE,QAAR,CAAlB,CAAT;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKP,OAAO,SAAUvB,sBAAV,CAAiCqB,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMf,qBAAqB,CAACe,MAAM,CAACC,EAAR,CAA3B;;AADG;AAAA;AAEH,iBAAML,GAAG,CAACR,mBAAmB,CAACY,MAAM,CAACC,EAAR,CAApB,CAAT;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKP,OAAO,SAAUrB,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMiB,SAAS,CAAEJ,YAAF,EAAgBlB,gBAAhB,CAAf;;AADG;AAAA;AAEH,iBAAMsB,SAAS,CAAEH,kBAAF,EAAsBlB,mBAAtB,CAAf;;AAFG;AAAA;AAGH,iBAAMqB,SAAS,CAAEN,eAAF,EAAmBd,kBAAnB,CAAf;;AAHG;AAAA;AAIH,iBAAMoB,SAAS,CAAEF,qBAAF,EAAyBjB,kBAAzB,CAAf;;AAJG;AAAA;AAKH,iBAAMmB,SAAS,CAAEL,qBAAF,EAAyBb,sBAAzB,CAAf;;AALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {getEmployeesAPI, getEmployeeByIdAPI, createEmployeeAPI, updateEmployeeAPI, deleteEmployeeByIdAPI} from './apis/index'\r\nimport { setEmployeeSlice } from './slice/employee'\r\nimport { addEmployeeSlice, deleteEmployeeSlice, editEmployeeSlice, getEmployeeSlice } from './slice/employees'\r\nimport { CREATE_EMPLOYEE, DELETE_EMPLOYEE_BY_ID, GET_EMPLOYEE, GET_EMPLOYEE_BY_ID, UPDATE_EMPLOYEE_BY_ID } from './types'\r\nimport {put, takeEvery } from 'redux-saga/effects'\r\n\r\nexport function* getEmployeesSaga () {\r\n    const employees = yield getEmployeesAPI()\r\n    yield put(getEmployeeSlice(employees.data))\r\n}\r\n\r\nexport function* getEmployeeByIdSaga (action) {\r\n    yield getEmployeeByIdAPI(action.id)\r\n    yield put(setEmployeeSlice(action.id))\r\n}\r\n\r\nexport function* createEmployeeSaga ( action) {\r\n    yield createEmployeeAPI(action.employee)\r\n    yield put(addEmployeeSlice(action.employee))\r\n}\r\n\r\nexport function* updateEmployeeSaga(action) {\r\n    yield updateEmployeeAPI(action.employee)\r\n    yield put(editEmployeeSlice(action.employee))\r\n}\r\n\r\nexport function* deleteEmployeeByIdSaga(action) {\r\n    yield deleteEmployeeByIdAPI(action.id)\r\n    yield put(deleteEmployeeSlice(action.id))\r\n}\r\n\r\nexport function* watchEmployeeAsync () {\r\n    yield takeEvery (GET_EMPLOYEE, getEmployeesSaga)\r\n    yield takeEvery (GET_EMPLOYEE_BY_ID, getEmployeeByIdSaga)\r\n    yield takeEvery (CREATE_EMPLOYEE, createEmployeeSaga)\r\n    yield takeEvery (UPDATE_EMPLOYEE_BY_ID, updateEmployeeSaga)\r\n    yield takeEvery (DELETE_EMPLOYEE_BY_ID, deleteEmployeeByIdSaga)\r\n}"]},"metadata":{},"sourceType":"module"}