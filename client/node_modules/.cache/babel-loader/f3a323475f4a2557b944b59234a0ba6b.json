{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar employee = createSlice({\n  name: 'employees',\n  initialState: [{\n    id: 0,\n    name: '',\n    code: '',\n    ege: '',\n    email: '',\n    phone: ''\n  }],\n  reducers: {\n    getEmployeeSlice: function getEmployeeSlice(state, action) {\n      state = action.payload;\n      return state;\n    },\n    addEmployeeSlice: function addEmployeeSlice(state, action) {\n      state.push(action.payload);\n      return state;\n    },\n    editEmployeeSlice: function editEmployeeSlice(state, action) {\n      state = state.map(function (i) {\n        return i.id === action.payload.id ? action.payload : i;\n      });\n      return state;\n    },\n    deleteEmployeeSlice: function deleteEmployeeSlice(state, action) {\n      state = state.filter(function (i) {\n        return i.id !== action.payload;\n      });\n      return state;\n    }\n  }\n});\nvar _employee$actions = employee.actions,\n    getEmployeeSlice = _employee$actions.getEmployeeSlice,\n    addEmployeeSlice = _employee$actions.addEmployeeSlice,\n    editEmployeeSlice = _employee$actions.editEmployeeSlice,\n    deleteEmployeeSlice = _employee$actions.deleteEmployeeSlice;\nexport { getEmployeeSlice, addEmployeeSlice, editEmployeeSlice, deleteEmployeeSlice };\nexport default employee.reducer;","map":{"version":3,"sources":["C:/Users/ducbang/Desktop/12345/employee/client/src/app/views/EmployeeSaga/redux/slice/employees.js"],"names":["createSlice","employee","name","initialState","id","code","ege","email","phone","reducers","getEmployeeSlice","state","action","payload","addEmployeeSlice","push","editEmployeeSlice","map","i","deleteEmployeeSlice","filter","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAMC,QAAQ,GAAGD,WAAW,CAAC;AACzBE,EAAAA,IAAI,EAAE,WADmB;AAEzBC,EAAAA,YAAY,EAAC,CAAC;AACVC,IAAAA,EAAE,EAAC,CADO;AAEVF,IAAAA,IAAI,EAAE,EAFI;AAGVG,IAAAA,IAAI,EAAE,EAHI;AAIVC,IAAAA,GAAG,EAAE,EAJK;AAKVC,IAAAA,KAAK,EAAE,EALG;AAMVC,IAAAA,KAAK,EAAC;AANI,GAAD,CAFY;AAUzBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,gBAAgB,EAAC,0BAACC,KAAD,EAAQC,MAAR,EAAmB;AAChCD,MAAAA,KAAK,GAAGC,MAAM,CAACC,OAAf;AACA,aAAOF,KAAP;AACH,KAJI;AAKLG,IAAAA,gBAAgB,EAAC,0BAACH,KAAD,EAAQC,MAAR,EAAmB;AAChCD,MAAAA,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACC,OAAlB;AACA,aAAOF,KAAP;AACH,KARI;AASLK,IAAAA,iBAAiB,EAAC,2BAACL,KAAD,EAAQC,MAAR,EAAmB;AACjCD,MAAAA,KAAK,GAAGA,KAAK,CAACM,GAAN,CAAU,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACd,EAAF,KAASQ,MAAM,CAACC,OAAP,CAAeT,EAAxB,GAA6BQ,MAAM,CAACC,OAApC,GAA8CK,CAAlD;AAAA,OAAX,CAAR;AACA,aAAOP,KAAP;AACH,KAZI;AAaLQ,IAAAA,mBAAmB,EAAC,6BAACR,KAAD,EAAQC,MAAR,EAAmB;AACnCD,MAAAA,KAAK,GAAGA,KAAK,CAACS,MAAN,CAAa,UAAAF,CAAC;AAAA,eAAIA,CAAC,CAACd,EAAF,KAASQ,MAAM,CAACC,OAApB;AAAA,OAAd,CAAR;AACA,aAAOF,KAAP;AACH;AAhBI;AAVgB,CAAD,CAA5B;wBA8B4FV,QAAQ,CAACoB,O;IAAvFX,gB,qBAAAA,gB;IAAkBI,gB,qBAAAA,gB;IAAkBE,iB,qBAAAA,iB;IAAmBG,mB,qBAAAA,mB;;AACrE,eAAelB,QAAQ,CAACqB,OAAxB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst employee = createSlice({\r\n    name: 'employees',\r\n    initialState:[{\r\n        id:0,\r\n        name: '',\r\n        code: '',\r\n        ege: '',\r\n        email: '',\r\n        phone:'',\r\n    }],\r\n    reducers:{\r\n        getEmployeeSlice:(state, action) => {  \r\n            state = action.payload\r\n            return state \r\n        },\r\n        addEmployeeSlice:(state, action) => {  \r\n            state.push(action.payload)\r\n            return state\r\n        },\r\n        editEmployeeSlice:(state, action) => {  \r\n            state = state.map(i => i.id === action.payload.id ? action.payload : i)\r\n            return state\r\n        },\r\n        deleteEmployeeSlice:(state, action) => {  \r\n            state = state.filter(i => i.id !== action.payload)\r\n            return state\r\n        }\r\n    } \r\n})\r\n\r\nexport const {getEmployeeSlice, addEmployeeSlice, editEmployeeSlice, deleteEmployeeSlice} = employee.actions\r\nexport default employee.reducer"]},"metadata":{},"sourceType":"module"}