{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\nimport firebaseConfig from \"./firebaseConfig\";\n\nvar FirebaseAuthService = //   database;\n//   storage;\nfunction FirebaseAuthService() {// UNCOMMENT IF YOU WANT TO USE FIREBASE\n  // this.init();\n  // this.auth = firebase.auth();\n  // this.firestore = firebase.firestore();\n  //   this.database  = firebase.database();\n  //   this.storage = firebase.storage();\n  // this.googleProvider = new firebase.auth.GoogleAuthProvider();\n  // this.facebookProvider = new firebase.auth.FacebookAuthProvider();\n  // this.twitterProvider = new firebase.auth.TwitterAuthProvider();\n\n  var _this = this;\n\n  _classCallCheck(this, FirebaseAuthService);\n\n  this.init = function () {\n    firebase.initializeApp(firebaseConfig);\n  };\n\n  this.checkAuthStatus = function (callback) {\n    _this.auth.onAuthStateChanged(callback);\n  };\n\n  this.signUpWithEmailAndPassword = function (email, password) {\n    return _this.auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  this.signInWithEmailAndPassword = function (email, password) {\n    return _this.auth.signInWithEmailAndPassword(email, password);\n  };\n\n  this.signInWithPopup = function (media) {\n    switch (media) {\n      case \"google\":\n        return _this.auth.signInWithPopup(_this.googleProvider);\n\n      case \"facebook\":\n        return _this.auth.signInWithPopup(_this.facebookProvider);\n\n      case \"twitter\":\n        return _this.auth.signInWithPopup(_this.twitterProvider);\n\n      default:\n        break;\n    }\n  };\n\n  this.signInWithPhoneNumber = function (phoneNumber) {\n    return _this.auth.signInWithPhoneNumber(phoneNumber);\n  };\n\n  this.getUserData = function (docId) {\n    //   generally it's better to use uid for docId\n    _this.firestore.collection(\"users\").doc(docId).get().then(function (doc) {\n      console.log(doc.data());\n    });\n  };\n\n  this.getAllUser = function () {\n    _this.firestore.collection(\"users\").get().then(function (docList) {\n      docList.forEach(function (doc) {\n        console.log(doc.data());\n      });\n    });\n  };\n\n  this.signOut = function () {\n    return _this.auth.signOut();\n  };\n};\n\nvar instance = new FirebaseAuthService();\nexport default instance;","map":{"version":3,"sources":["C:/Users/ducbang/Desktop/12345/employee/client/src/app/services/firebase/firebaseAuthService.js"],"names":["firebase","firebaseConfig","FirebaseAuthService","init","initializeApp","checkAuthStatus","callback","auth","onAuthStateChanged","signUpWithEmailAndPassword","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","media","googleProvider","facebookProvider","twitterProvider","signInWithPhoneNumber","phoneNumber","getUserData","docId","firestore","collection","doc","get","then","console","log","data","getAllUser","docList","forEach","signOut","instance"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,6BAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAEMC,mB,GAGJ;AACA;AAMA,+BAAc,CACZ;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAZY;;AAAA;;AAAA,OAedC,IAfc,GAeP,YAAM;AACXH,IAAAA,QAAQ,CAACI,aAAT,CAAuBH,cAAvB;AACD,GAjBa;;AAAA,OAmBdI,eAnBc,GAmBI,UAAAC,QAAQ,EAAI;AAC5B,IAAA,KAAI,CAACC,IAAL,CAAUC,kBAAV,CAA6BF,QAA7B;AACD,GArBa;;AAAA,OAuBdG,0BAvBc,GAuBe,UAACC,KAAD,EAAQC,QAAR,EAAqB;AAChD,WAAO,KAAI,CAACJ,IAAL,CAAUK,8BAAV,CAAyCF,KAAzC,EAAgDC,QAAhD,CAAP;AACD,GAzBa;;AAAA,OA2BdE,0BA3Bc,GA2Be,UAACH,KAAD,EAAQC,QAAR,EAAqB;AAChD,WAAO,KAAI,CAACJ,IAAL,CAAUM,0BAAV,CAAqCH,KAArC,EAA4CC,QAA5C,CAAP;AACD,GA7Ba;;AAAA,OA+BdG,eA/Bc,GA+BI,UAAAC,KAAK,EAAI;AACzB,YAAQA,KAAR;AACE,WAAK,QAAL;AACE,eAAO,KAAI,CAACR,IAAL,CAAUO,eAAV,CAA0B,KAAI,CAACE,cAA/B,CAAP;;AAEF,WAAK,UAAL;AACE,eAAO,KAAI,CAACT,IAAL,CAAUO,eAAV,CAA0B,KAAI,CAACG,gBAA/B,CAAP;;AAEF,WAAK,SAAL;AACE,eAAO,KAAI,CAACV,IAAL,CAAUO,eAAV,CAA0B,KAAI,CAACI,eAA/B,CAAP;;AAEF;AACE;AAXJ;AAaD,GA7Ca;;AAAA,OA+CdC,qBA/Cc,GA+CU,UAAAC,WAAW,EAAI;AACrC,WAAO,KAAI,CAACb,IAAL,CAAUY,qBAAV,CAAgCC,WAAhC,CAAP;AACD,GAjDa;;AAAA,OAmDdC,WAnDc,GAmDA,UAAAC,KAAK,EAAI;AACrB;AACA,IAAA,KAAI,CAACC,SAAL,CACGC,UADH,CACc,OADd,EAEGC,GAFH,CAEOH,KAFP,EAGGI,GAHH,GAIGC,IAJH,CAIQ,UAAAF,GAAG,EAAI;AACXG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,EAAZ;AACD,KANH;AAOD,GA5Da;;AAAA,OA8DdC,UA9Dc,GA8DD,YAAM;AACjB,IAAA,KAAI,CAACR,SAAL,CACGC,UADH,CACc,OADd,EAEGE,GAFH,GAGGC,IAHH,CAGQ,UAAAK,OAAO,EAAI;AACfA,MAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAR,GAAG,EAAI;AACrBG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,EAAZ;AACD,OAFD;AAGD,KAPH;AAQD,GAvEa;;AAAA,OAyEdI,OAzEc,GAyEJ,YAAM;AACd,WAAO,KAAI,CAAC3B,IAAL,CAAU2B,OAAV,EAAP;AACD,GA3Ea;AAab,C;;AAiEH,IAAMC,QAAQ,GAAG,IAAIjC,mBAAJ,EAAjB;AAEA,eAAeiC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firebase-firestore\";\r\nimport firebaseConfig from \"./firebaseConfig\";\r\n\r\nclass FirebaseAuthService {\r\n  auth;\r\n  firestore;\r\n  //   database;\r\n  //   storage;\r\n\r\n  googleProvider;\r\n  facebookProvider;\r\n  twitterProvider;\r\n\r\n  constructor() {\r\n    // UNCOMMENT IF YOU WANT TO USE FIREBASE\r\n\r\n    // this.init();\r\n    // this.auth = firebase.auth();\r\n    // this.firestore = firebase.firestore();\r\n\r\n    //   this.database  = firebase.database();\r\n    //   this.storage = firebase.storage();\r\n    \r\n    // this.googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    // this.facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n    // this.twitterProvider = new firebase.auth.TwitterAuthProvider();\r\n  }\r\n\r\n  init = () => {\r\n    firebase.initializeApp(firebaseConfig);\r\n  };\r\n\r\n  checkAuthStatus = callback => {\r\n    this.auth.onAuthStateChanged(callback);\r\n  };\r\n\r\n  signUpWithEmailAndPassword = (email, password) => {\r\n    return this.auth.createUserWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  signInWithEmailAndPassword = (email, password) => {\r\n    return this.auth.signInWithEmailAndPassword(email, password);\r\n  };\r\n\r\n  signInWithPopup = media => {\r\n    switch (media) {\r\n      case \"google\":\r\n        return this.auth.signInWithPopup(this.googleProvider);\r\n\r\n      case \"facebook\":\r\n        return this.auth.signInWithPopup(this.facebookProvider);\r\n\r\n      case \"twitter\":\r\n        return this.auth.signInWithPopup(this.twitterProvider);\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  signInWithPhoneNumber = phoneNumber => {\r\n    return this.auth.signInWithPhoneNumber(phoneNumber);\r\n  };\r\n\r\n  getUserData = docId => {\r\n    //   generally it's better to use uid for docId\r\n    this.firestore\r\n      .collection(\"users\")\r\n      .doc(docId)\r\n      .get()\r\n      .then(doc => {\r\n        console.log(doc.data());\r\n      });\r\n  };\r\n\r\n  getAllUser = () => {\r\n    this.firestore\r\n      .collection(\"users\")\r\n      .get()\r\n      .then(docList => {\r\n        docList.forEach(doc => {\r\n          console.log(doc.data());\r\n        });\r\n      });\r\n  };\r\n\r\n  signOut = () => {\r\n    return this.auth.signOut();\r\n  };\r\n}\r\n\r\nconst instance = new FirebaseAuthService();\r\n\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}