{"ast":null,"code":"import addQuarters from \"../addQuarters/index.js\";\nimport startOfQuarter from \"../startOfQuarter/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name eachQuarterOfInterval\r\n * @category Interval Helpers\r\n * @summary Return the array of quarters within the specified time interval.\r\n *\r\n * @description\r\n * Return the array of quarters within the specified time interval.\r\n *\r\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\r\n * @returns {Date[]} the array with starts of quarters from the quarter of the interval start to the quarter of the interval end\r\n * @throws {TypeError} 1 argument required\r\n * @throws {RangeError} The start of an interval cannot be after its end\r\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\r\n *\r\n * @example\r\n * // Each quarter within interval 6 February 2014 - 10 August 2014:\r\n * var result = eachQuarterOfInterval({\r\n *   start: new Date(2014, 1, 6),\r\n *   end: new Date(2014, 7, 10)\r\n * })\r\n * //=> [\r\n * //   Wed Jan 01 2014 00:00:00,\r\n * //   Tue Apr 01 2014 00:00:00,\r\n * //   Tue Jul 01 2014 00:00:00,\r\n * // ]\r\n */\n\nexport default function eachQuarterOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateQuarter = startOfQuarter(startDate);\n  var endDateQuarter = startOfQuarter(endDate);\n  endTime = endDateQuarter.getTime();\n  var quarters = [];\n  var currentQuarter = startDateQuarter;\n\n  while (currentQuarter.getTime() <= endTime) {\n    quarters.push(toDate(currentQuarter));\n    currentQuarter = addQuarters(currentQuarter, 1);\n  }\n\n  return quarters;\n}","map":null,"metadata":{},"sourceType":"module"}