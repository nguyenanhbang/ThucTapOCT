{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\src\\\\app\\\\views\\\\Color\\\\ColorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, DialogActions, FormControl, Paper, DialogTitle, DialogContent } from \"@material-ui/core\"; // import Paper from '@material-ui/core/Paper'\n\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Draggable from \"react-draggable\";\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\nimport { addNewSource, updateSource, checkCode, updateKho } from \"./ColorService\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar ColorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(ColorDialog, _Component);\n\n  function ColorDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ColorDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ColorDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      id: \"\",\n      name: \"\",\n      code: \"\",\n      description: \"\",\n      type: \"\",\n      shouldOpenNotificationPopup: false,\n      Notification: \"\"\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenNotificationPopup: false\n      });\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.id;\n      var code = _this.state.code;\n      var t = _this.props.t;\n      checkCode(id, code).then(function (result) {\n        //Nếu trả về true là code đã được sử dụng\n        if (result.data) {\n          toast.warning(t(\"general.dupli_code\")); // alert(\"Code đã được sử dụng\");\n        } else {\n          //Nếu trả về false là code chưa sử dụng có thể dùng\n          if (id) {\n            updateSource(_objectSpread({}, _this.state)).then(function () {\n              toast.success(t(\"general.updateSuccess\"));\n\n              _this.props.handleOKEditClose();\n            });\n          } else {\n            addNewSource(_objectSpread({}, _this.state)).then(function () {\n              toast.success(t(\"general.addSuccess\"));\n\n              _this.props.handleOKEditClose();\n            });\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ColorDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState(item);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          id = _this$state.id,\n          name = _this$state.name,\n          code = _this$state.code,\n          description = _this$state.description,\n          shouldOpenNotificationPopup = _this$state.shouldOpenNotificationPopup;\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\",\n          paddingBottom: \"0px\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, id ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 35\n        }\n      }, \"S\\u1EEDa th\\xF4ng tin m\\xE0u s\\u1EAFc\") : /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 74\n        }\n      }, \"Th\\xEAm m\\xE0u s\\u1EAFc\"))), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.name\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 23\n          }\n        }, \"*\"), t(\"general.code\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 23\n          }\n        }, \"*\"), \"M\\xF4 t\\u1EA3\"),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"description\",\n        value: description,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle mt-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"mr-12\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }\n      }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        style: {\n          marginRight: \"15px\"\n        },\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }\n      }, t(\"general.save\"))))));\n    }\n  }]);\n\n  return ColorDialog;\n}(Component);\n\nexport default ColorDialog;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/employee-main/client/src/app/views/Color/ColorDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","DialogActions","FormControl","Paper","DialogTitle","DialogContent","ValidatorForm","TextValidator","Draggable","NotificationPopup","addNewSource","updateSource","checkCode","updateKho","toast","configure","autoClose","draggable","limit","PaperComponent","props","ColorDialog","state","id","name","code","description","type","shouldOpenNotificationPopup","Notification","handleDialogClose","setState","handleChange","event","source","persist","isActive","target","checked","value","handleFormSubmit","t","then","result","data","warning","success","handleOKEditClose","open","handleClose","item","i18n","cursor","paddingBottom","color","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Dialog,\n  Button,\n  Grid,\n  DialogActions,\n  FormControl,\n  Paper,\n  DialogTitle,\n  DialogContent,\n} from \"@material-ui/core\";\n// import Paper from '@material-ui/core/Paper'\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Draggable from \"react-draggable\";\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\nimport {\n  addNewSource,\n  updateSource,\n  checkCode,updateKho\n} from \"./ColorService\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3,\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nclass ColorDialog extends Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    code: \"\",\n    description: \"\",\n    type: \"\",\n    shouldOpenNotificationPopup: false,\n    Notification: \"\",\n  };\n\n  handleDialogClose = () => {\n    this.setState({ shouldOpenNotificationPopup: false });\n  };\n\n  handleChange = (event, source) => {\n    event.persist();\n    if (source === \"switch\") {\n      this.setState({ isActive: event.target.checked });\n      return;\n    }\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleFormSubmit = () => {\n    let { id } = this.state;\n    let { code } = this.state;\n    var { t } = this.props;\n    checkCode(id, code).then((result) => {\n      //Nếu trả về true là code đã được sử dụng\n      if (result.data) {\n        toast.warning(t(\"general.dupli_code\"));\n        // alert(\"Code đã được sử dụng\");\n      } else {\n        //Nếu trả về false là code chưa sử dụng có thể dùng\n        if (id) {\n          updateSource({\n            ...this.state,\n          }).then(() => {\n            toast.success(t(\"general.updateSuccess\"));\n            this.props.handleOKEditClose();\n          });\n        } else {\n          addNewSource({\n            ...this.state,\n          }).then(() => {\n            toast.success(t(\"general.addSuccess\"));\n            this.props.handleOKEditClose();\n          });\n        }\n      }\n    });\n  };\n\n  componentWillMount() {\n    //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n    let { open, handleClose, item } = this.props;\n    this.setState(item);\n  }\n\n  render() {\n    let {\n      id,\n      name,\n      code,\n      description,\n      shouldOpenNotificationPopup,\n    } = this.state;\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\n    return (\n      <Dialog\n        open={open}\n        PaperComponent={PaperComponent}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle\n          style={{ cursor: \"move\", paddingBottom: \"0px\" }}\n          id=\"draggable-dialog-title\"\n        >\n          <h4 className=\"\">{id ? (<span>Sửa thông tin màu sắc</span>) : (<span>Thêm màu sắc</span>)}</h4>\n        </DialogTitle>\n\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\n          <DialogContent>\n            <Grid className=\"\" container spacing={2}>\n              <Grid item sm={12} xs={12}>\n                <TextValidator\n                  className=\"w-100 \"\n                  label={\n                    <span>\n                      <span style={{ color: \"red\" }}>*</span>\n                      {t(\"general.name\")}\n                    </span>\n                  }\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  validators={[\"required\"]}\n                  errorMessages={[t(\"general.required\")]}\n                />\n              </Grid>\n\n              <Grid item sm={12} xs={12}>\n                <TextValidator\n                  className=\"w-100 \"\n                  label={\n                    <span>\n                      <span style={{ color: \"red\" }}>*</span>\n                      {t(\"general.code\")}\n                    </span>\n                  }\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"code\"\n                  value={code}\n                  validators={[\"required\"]}\n                  errorMessages={[t(\"general.required\")]}\n                />\n              </Grid>\n              <Grid item sm={12} xs={12}>\n                <TextValidator\n                  className=\"w-100 \"\n                  label={\n                    <span>\n                      <span style={{ color: \"red\" }}>*</span>\n                      Mô tả\n                    </span>\n                  }\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"description\"\n                  value={description}\n                  validators={[\"required\"]}\n                  errorMessages={[t(\"general.required\")]}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <div className=\"flex flex-space-between flex-middle mt-12\">\n              <Button\n                variant=\"contained\"\n                className=\"mr-12\"\n                color=\"secondary\"\n                onClick={() => this.props.handleClose()}\n              >\n                {t(\"general.cancel\")}\n              </Button>\n              <Button\n                variant=\"contained\"\n                style={{ marginRight: \"15px\" }}\n                color=\"primary\"\n                type=\"submit\"\n              >\n                {t(\"general.save\")}\n              </Button>\n            </div>\n          </DialogActions>\n        </ValidatorForm>\n      </Dialog>\n    );\n  }\n}\n\nexport default ColorDialog;\n"]},"metadata":{},"sourceType":"module"}