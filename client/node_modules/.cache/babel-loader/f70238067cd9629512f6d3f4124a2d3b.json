{"ast":null,"code":"import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name endOfISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Return the end of an ISO week-numbering year for the given date.\r\n *\r\n * @description\r\n * Return the end of an ISO week-numbering year,\r\n * which always starts 3 days before the year's first Thursday.\r\n * The result will be in the local timezone.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * - The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.\r\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\r\n *   This change makes the name consistent with\r\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\r\n *\r\n * @param {Date|Number} date - the original date\r\n * @returns {Date} the end of an ISO week-numbering year\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // The end of an ISO week-numbering year for 2 July 2005:\r\n * const result = endOfISOWeekYear(new Date(2005, 6, 2))\r\n * //=> Sun Jan 01 2006 23:59:59.999\r\n */\n\nexport default function endOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  date.setMilliseconds(date.getMilliseconds() - 1);\n  return date;\n}","map":null,"metadata":{},"sourceType":"module"}