{"ast":null,"code":"import axiosMiddleware from 'redux-axios-middleware';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport RootReducer from './reducers/RootReducer';\nimport HttpService from 'app/services/HttpService';\nimport createSagaMiddleware from 'redux-saga';\nimport mySaga from 'sagas';\nvar initialState = {}; //const middlewares = [thunk];\n\nvar sagaMiddleware = createSagaMiddleware();\nvar middlewares = [sagaMiddleware, //routerMiddleware(browserHistory),\naxiosMiddleware(HttpService.getAxiosClient())];\nexport var Store = createStore(RootReducer, initialState, compose(applyMiddleware.apply(void 0, middlewares) // applyMiddleware(...middlewares),\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\nsagaMiddleware.run(mySaga);","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/employee-main/client/src/app/redux/Store.js"],"names":["axiosMiddleware","thunk","createStore","applyMiddleware","compose","RootReducer","HttpService","createSagaMiddleware","mySaga","initialState","sagaMiddleware","middlewares","getAxiosClient","Store","run"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,wBAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,OAAnB;AACA,IAAMC,YAAY,GAAG,EAArB,C,CAEA;;AACA,IAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,IAAMI,WAAW,GAAG,CACnBD,cADmB,EAEnB;AACAV,eAAe,CAACM,WAAW,CAACM,cAAZ,EAAD,CAHI,CAApB;AAKA,OAAO,IAAMC,KAAK,GAAGX,WAAW,CAC/BG,WAD+B,EAE/BI,YAF+B,EAG/BL,OAAO,CACND,eAAe,MAAf,SAAmBQ,WAAnB,CADM,CAEN;AACA;AAHM,CAHwB,CAAzB;AAUPD,cAAc,CAACI,GAAf,CAAmBN,MAAnB","sourcesContent":["import axiosMiddleware from 'redux-axios-middleware';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport RootReducer from './reducers/RootReducer';\nimport HttpService from 'app/services/HttpService';\nimport createSagaMiddleware from 'redux-saga';\nimport mySaga from 'sagas';\nconst initialState = {};\n\n//const middlewares = [thunk];\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [\n\tsagaMiddleware,\n\t//routerMiddleware(browserHistory),\n\taxiosMiddleware(HttpService.getAxiosClient()),\n];\nexport const Store = createStore(\n\tRootReducer,\n\tinitialState,\n\tcompose(\n\t\tapplyMiddleware(...middlewares)\n\t\t// applyMiddleware(...middlewares),\n\t\t// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\t)\n);\n\nsagaMiddleware.run(mySaga);\n"]},"metadata":{},"sourceType":"module"}