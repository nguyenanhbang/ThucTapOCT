{"ast":null,"code":"import isValid from \"../isValid/index.js\";\nimport isWeekend from \"../isWeekend/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport differenceInCalendarDays from \"../differenceInCalendarDays/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport isSameDay from \"../isSameDay/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name differenceInBusinessDays\r\n * @category Day Helpers\r\n * @summary Get the number of business days between the given dates.\r\n *\r\n * @description\r\n * Get the number of business day periods between the given dates.\r\n * Business days being days that arent in the weekend.\r\n * Like `differenceInCalendarDays`, the function removes the times from\r\n * the dates before calculating the difference.\r\n *\r\n * @param {Date|Number} dateLeft - the later date\r\n * @param {Date|Number} dateRight - the earlier date\r\n * @returns {Number} the number of business days\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // How many business days are between\r\n * // 10 January 2014 and 20 July 2014?\r\n * var result = differenceInBusinessDays(\r\n *   new Date(2014, 6, 20),\r\n *   new Date(2014, 0, 10)\r\n * )\r\n * //=> 136\r\n */\n\nexport default function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  if (!isValid(dateLeft) || !isValid(dateRight)) return new Date(NaN);\n  var calendarDifference = differenceInCalendarDays(dateLeft, dateRight);\n  var sign = calendarDifference < 0 ? -1 : 1;\n  var weeks = toInteger(calendarDifference / 7);\n  var result = weeks * 5;\n  dateRight = addDays(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n\n  while (!isSameDay(dateLeft, dateRight)) {\n    // sign is used to account for both negative and positive differences\n    result += isWeekend(dateRight) ? 0 : sign;\n    dateRight = addDays(dateRight, sign);\n  }\n\n  return result === 0 ? 0 : result;\n}","map":null,"metadata":{},"sourceType":"module"}