{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\src\\\\app\\\\views\\\\ShiftWork\\\\ShiftWorkDialog.js\";\nimport ConstantList from \"../../appConfig\";\nimport { Grid, MuiThemeProvider, FormControlLabel, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination, Radio, Dialog, DialogActions, IconButton, Icon } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\"; // import { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport NotificationPopup from '../Component/NotificationPopup/NotificationPopup'; // import SelectMutiSalaryItemPopup from \"./../SalaryConfig/SelectMutiSalaryItemPopup\"\n\nimport moment from \"moment\";\nimport SelectDepartmentPopup from './../SalaryConfig/SelectDepartmentPopup';\nimport { createPurchasePlaning, addNewSalaryConfig } from \"./../SalaryConfig/SalaryConfigService\";\nimport { searchByPage as getAll } from \"../PurchaseRequestStauts/PurchaseRequestStautsService\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { KeyboardTimePicker, MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardDateTimePicker } from '@material-ui/pickers';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { addItem, updateItem } from './ShiftWorkService';\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  })));\n}\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  var isStatus = props.isStatus;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"delete\")));\n}\n\nvar ShiftWorkDialog = /*#__PURE__*/function (_React$Component) {\n  _inherits(ShiftWorkDialog, _React$Component);\n\n  function ShiftWorkDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShiftWorkDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShiftWorkDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rowsPerPage: 1000,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenNotificationPopup: false,\n      selectedItem: {},\n      keyword: '',\n      Notification: \"\",\n      planingDate: Date.now(),\n      approvedDate: null,\n      managementDepartment: null,\n      shouldOpenSelectDepartmentPopup: false,\n      status: null,\n      note: null,\n      shouldOpenProductPopup: false,\n      product: null,\n      salaryConfigItems: [],\n      planingDepartment: null,\n      listProduct: [],\n      type: 1,\n      formToDate: moment().endOf('month'),\n      formDate: moment().startOf('month'),\n      listStatus: [],\n      timePeriodsSelect: [],\n      timePeriods: [],\n      endTime: new Date(),\n      startTime: new Date(),\n      isTrueTime: false,\n      totalHours: 0\n    };\n    _this.PURCHASE = {\n      \"name\": \"Đã duyệt\",\n      indexOrder: 2 //Đã duyệt\n\n    };\n\n    _this.openSelectDepartmentPopup = function () {\n      _this.setState({\n        shouldOpenSelectDepartmentPopup: true\n      });\n    };\n\n    _this.handleSelectManagementDepartment = function (item) {\n      var department = {\n        id: item.id,\n        name: item.name\n      };\n\n      _this.setState({\n        department: department\n      }, function () {\n        // this.search()\n        this.handleSelectDepartmentPopupClose();\n      });\n    };\n\n    _this.handleSelectDepartmentPopupClose = function () {\n      _this.setState({\n        shouldOpenSelectDepartmentPopup: false\n      });\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleSalaryConfigPopupClose = function () {\n      _this.setState({\n        shouldOpenProductPopup: false\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.id;\n      var code = _this.state.code;\n      var t = _this.props.t;\n\n      if (_this.state.timePeriods == null || _this.state.timePeriods.length === 0) {\n        toast.warning(\"Chưa chọn thời gian làm việc.\");\n        return;\n      }\n\n      if (id) {\n        updateItem(_objectSpread({}, _this.state), id).then(function () {\n          toast.success(\"Cập nhật ca làm việc thành công\");\n\n          _this.props.handleOKEditClose();\n        }).catch(function (err) {\n          toast.success(\"Có lỗi xảy ra khi cập nhật thông tin ca làm việc\");\n        });\n      } else {\n        addItem(_objectSpread({}, _this.state)).then(function (res) {\n          toast.success(\"Tạo mới ca làm việc thành công\");\n\n          _this.props.handleOKEditClose();\n        }).catch(function (err) {\n          toast.success(\"Có lỗi xảy ra khi cập nhật thông tin ca làm việc\");\n        });\n      }\n    };\n\n    _this.isTrueTime = function (startTime, endTime) {\n      if (startTime > endTime) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.handleChangeDate = function (date, name) {\n      var iteam = _this.state.iteam;\n      var totalHours = 0;\n\n      if (iteam == null) {\n        iteam = {};\n      }\n\n      iteam[name] = date;\n\n      _this.setState({\n        [name]: date\n      });\n\n      if (_this.state.endTime != null && _this.state.startTime && name === \"endTime\") {\n        if (date > _this.state.startTime) {\n          totalHours = (date - _this.state.startTime.getTime()) / 3600000;\n\n          _this.setState({\n            totalHours: totalHours\n          });\n        }\n      }\n    };\n\n    _this.handleSelectMultiSalaryConfig = function (items) {\n      var salaryConfigItems = _this.state.salaryConfigItems;\n\n      if (items != null && items.length > 0) {\n        var listIdProuct = salaryConfigItems.map(function (el) {\n          return el.salaryItem.id;\n        });\n\n        if (listIdProuct.indexOf()) {\n          items.forEach(function (item) {\n            if (listIdProuct.indexOf(item.salaryItem.id) < 0) {\n              ///check\n              salaryConfigItems.push(item);\n            }\n          });\n\n          _this.setState({\n            salaryConfigItems: salaryConfigItems\n          }, function () {\n            this.handleSalaryConfigPopupClose();\n          });\n        }\n      }\n    };\n\n    _this.selectedTime = function (name, value) {\n      _this.setState({\n        [name]: value\n      });\n    };\n\n    _this.submitTime = function () {\n      var t = _this.props.t;\n      var timePeriodsSelect = _this.state.timePeriodsSelect;\n      var index = 1;\n\n      if (timePeriodsSelect.length === 0) {\n        if (!_this.state.startTime.getTime() || !_this.state.endTime.getTime()) {\n          index = 2;\n        } else if (_this.state.startTime.getTime() >= _this.state.endTime.getTime()) {\n          toast.warning(\"Thời gian bắt đầu không được lớn hơn thời gian kết thúc\");\n          index = 3;\n        }\n      } else {\n        for (var i = 0; i < timePeriodsSelect.length; i++) {\n          if (!_this.state.startTime.getTime() || !_this.state.endTime.getTime()) {\n            index = 2; // toast.warning(t(\"maintainRequestStatus.noti.noSelected\"))\n\n            break;\n          } else if (_this.state.startTime.getTime() >= _this.state.endTime.getTime()) {\n            // toast.warning(t(\"maintainRequestStatus.noti.selectedFalse\"))\n            index = 3;\n            break;\n          } else if (_this.state.startTime.getTime() >= timePeriodsSelect[i].startTime.getTime() && _this.state.startTime.getTime() <= timePeriodsSelect[i].endTime.getTime()) {\n            // toast.warning(t(\"maintainRequestStatus.noti.dupli_time\"))\n            index = 4;\n            break;\n          } else if (_this.state.endTime.getTime() >= timePeriodsSelect[i].startTime.getTime() && _this.state.endTime.getTime() <= timePeriodsSelect[i].endTime.getTime()) {\n            // toast.warning(t(\"maintainRequestStatus.noti.dupli_time\"))\n            index = 4;\n            break;\n          } else if (_this.state.endTime.getTime() >= timePeriodsSelect[i].startTime.getTime() && _this.state.startTime.getTime() <= timePeriodsSelect[i].startTime.getTime()) {\n            // toast.warning(t(\"maintainRequestStatus.noti.dupli_time\"))\n            index = 4;\n            break;\n          } else if (_this.state.endTime.getTime() >= timePeriodsSelect[i].endTime.getTime() && _this.state.startTime.getTime() <= timePeriodsSelect[i].endTime.getTime()) {\n            // toast.warning(t(\"maintainRequestStatus.noti.dupli_time\"))\n            index = 4;\n            break;\n          } else {}\n        }\n      }\n\n      if (index === 1) {\n        timePeriodsSelect.push({\n          startTime: _this.state.startTime,\n          endTime: _this.state.endTime\n        });\n\n        _this.setState({\n          timePeriodsSelect: _toConsumableArray(timePeriodsSelect)\n        });\n      }\n\n      if (index === 4) {\n        toast.warning(\"Thời gian bị trùng\");\n        return;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ShiftWorkDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item,\n          handleDialogClose = _this$props.handleDialogClose;\n\n      if (item.id) {\n        //debugger\n        this.setState(_objectSpread({}, item, {\n          timePeriodsSelect: item.timePeriods\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      ValidatorForm.addValidationRule('isMaxDate', function (value) {\n        if (value.getTime() > Date.now()) {\n          return false;\n        }\n\n        return true;\n      });\n      ValidatorForm.addValidationRule('isTrueTime', function (value) {\n        if (value) {\n          if (_this2.isTrueTime(_this2.state.startTime, _this2.state.endTime)) {\n            return true;\n          }\n\n          return false;\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n,\n          handleClose = _this$props2.handleClose,\n          handleSelect = _this$props2.handleSelect,\n          selectedItem = _this$props2.selectedItem,\n          open = _this$props2.open,\n          handleDialogClose = _this$props2.handleDialogClose,\n          item = _this$props2.item;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          product = _this$state.product,\n          receptionDepartment = _this$state.receptionDepartment,\n          productTypeCode = _this$state.productTypeCode,\n          code = _this$state.code,\n          name = _this$state.name,\n          department = _this$state.department,\n          totalHours = _this$state.totalHours,\n          isTrueTime = _this$state.isTrueTime,\n          status = _this$state.status,\n          note = _this$state.note,\n          quantity = _this$state.quantity,\n          shouldOpenProductPopup = _this$state.shouldOpenProductPopup,\n          salaryConfigItems = _this$state.salaryConfigItems,\n          planingDepartment = _this$state.planingDepartment,\n          managementDepartment = _this$state.managementDepartment,\n          planingDate = _this$state.planingDate,\n          shouldOpenNotificationPopup = _this$state.shouldOpenNotificationPopup,\n          Notification = _this$state.Notification,\n          approvedDate = _this$state.approvedDate,\n          shouldOpenSelectDepartmentPopup = _this$state.shouldOpenSelectDepartmentPopup,\n          timePeriodsSelect = _this$state.timePeriodsSelect,\n          startTime = _this$state.startTime,\n          endTime = _this$state.endTime;\n      var searchObject = {\n        keyword: '',\n        pageIndex: 0,\n        pageSize: 10000\n      };\n      var now = Date.now();\n      var useStyles = this.props.useStyles;\n      var classes = useStyles;\n      var iteam = this.state.iteam;\n      var isEmpty = true;\n\n      if (iteam == null) {\n        iteam = {};\n      }\n\n      if (iteam != null && iteam.files != null && iteam.files.length > 0) {\n        isEmpty = false;\n      }\n\n      var columns = [{\n        title: t(\"Thời gian bắt đầu\"),\n        field: \"startTime\",\n        width: \"200px\",\n        headerStyle: {\n          paddingLeft: '12px',\n          paddingRight: '0px'\n        },\n        cellStyle: {\n          paddingLeft: '7px',\n          paddingRight: '0px'\n        },\n        render: function render(rowData) {\n          return rowData.startTime ? /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 33\n            }\n          }, moment(rowData.startTime).format(\"DD/MM/YYYY, HH:mm\")) : '';\n        }\n      }, {\n        title: t(\"Thời gian kết thúc\"),\n        field: \"endTime\",\n        align: \"left\",\n        width: \"200\",\n        headerStyle: {\n          paddingLeft: '12px',\n          paddingRight: '0px'\n        },\n        cellStyle: {\n          paddingLeft: '7px',\n          paddingRight: '0px'\n        },\n        render: function render(rowData) {\n          return rowData.endTime ? /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 31\n            }\n          }, moment(rowData.endTime).format(\"DD/MM/YYYY, HH:mm\")) : '';\n        }\n      }, {\n        title: t(\"general.action\"),\n        field: \"custom\",\n        align: \"left\",\n        width: \"100px\",\n        headerStyle: {\n          paddingLeft: '0px',\n          paddingRight: '0px'\n        },\n        cellStyle: {\n          paddingLeft: '7px',\n          paddingRight: '0px'\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(MaterialButton, {\n            item: rowData,\n            isStatus: _this3.state.isStatus,\n            onSelect: function onSelect(rowData, method) {\n              // debugger\n              if (method === 0) {} else if (method === 1) {\n                for (var index = 0; index < timePeriodsSelect.length; index++) {\n                  var _item = timePeriodsSelect[index];\n\n                  if (rowData && _item //&& rowData.id === item.id\n                  ) {\n                      timePeriodsSelect.splice(index, 1);\n\n                      _this3.setState({\n                        timePeriodsSelect: timePeriodsSelect\n                      });\n\n                      break;\n                    }\n                }\n              } else {\n                alert('Call Selected Here:' + rowData.id);\n              }\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 28\n            }\n          });\n        }\n      }];\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"md\",\n        scroll: \"paper\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 7\n        }\n      }, shouldOpenNotificationPopup && /*#__PURE__*/React.createElement(NotificationPopup, {\n        title: t('general.noti'),\n        open: shouldOpenNotificationPopup // onConfirmDialogClose={this.handleDialogClose}\n        ,\n        onYesClick: this.handleDialogClose,\n        text: t(this.state.Notification),\n        agree: t('general.agree'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        class: \"validator-form-scroll-dialog\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move',\n          marginBottom: '0px',\n          overflow: 'hidden'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }\n      }, this.state.id ? t(\"Sửa\") : t(\"Thêm\")), /*#__PURE__*/React.createElement(DialogContent, {\n        style: {\n          height: '450px',\n          overflow: 'hidden'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(KeyboardDateTimePicker, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 49\n          }\n        }, \"*\"), t('Thời gian bắt đầu')),\n        format: \"dd/MM/yyyy, HH:mm\",\n        margin: \"normal\",\n        id: \"date-picker-inline\",\n        name: \"startTime\",\n        value: startTime,\n        onChange: function onChange(startTime) {\n          return _this3.handleChangeDate(startTime, \"startTime\");\n        },\n        type: isTrueTime ? \"startTime\" : \"datetime\",\n        validators: ['required', 'isTrueTime'],\n        invalidDateMessage: \"Không đúng định dạng\",\n        errorMessages: [t(\"general.errorMessages_required\"), t(\"general.isTruePhoneNumer\")],\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        },\n        inputVariant: \"outlined\",\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(KeyboardDateTimePicker, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 49\n          }\n        }, \"*\"), t('Thời gian kết thúc')),\n        format: \"dd/MM/yyyy, HH:mm\",\n        margin: \"normal\",\n        id: \"date-picker-inline\",\n        name: \"endTime\",\n        value: endTime,\n        type: isTrueTime ? \"endTime\" : \"datetime\",\n        validators: ['required', 'isTrueTime'],\n        invalidDateMessage: \"Không đúng định dạng\",\n        errorMessages: [t(\"general.errorMessages_required\"), t(\"general.isTruePhoneNumer\")],\n        onChange: function onChange(endTime) {\n          return _this3.handleChangeDate(endTime, \"endTime\");\n        },\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        },\n        inputVariant: \"outlined\",\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        className: \"\",\n        item: true,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 32\n          }\n        }, \"*\"), t(\"Tên\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        validators: ['required'],\n        errorMessages: \"Tr\\u01B0\\u1EDDng n\\xE0y kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        className: \"\",\n        item: true,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 32\n          }\n        }, \"*\"), t(\"Mã\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        validators: ['required'],\n        errorMessages: \"Tr\\u01B0\\u1EDDng n\\xE0y kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        className: \"\",\n        item: true,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 32\n          }\n        }, \"*\"), t(\"Tổng thời gian\")),\n        onChange: this.handleChange,\n        type: \"number\",\n        name: \"totalHours\",\n        value: totalHours,\n        disabled: true,\n        validators: ['required'],\n        errorMessages: \"Tr\\u01B0\\u1EDDng n\\xE0y kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        className: \"\",\n        item: true,\n        md: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          float: 'right'\n        },\n        size: \"small\",\n        className: \"mt-10\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.submitTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 17\n        }\n      }, t('general.select'))), /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16 mt-16\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        data: this.state.timePeriodsSelect ? this.state.timePeriodsSelect : [],\n        columns: columns,\n        options: {\n          toolbar: false,\n          selection: true,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          padding: 'dense',\n          rowStyle: function rowStyle(rowData) {\n            return {\n              backgroundColor: rowData.tableData.id % 2 === 1 ? \"#EEE\" : \"#FFF\"\n            };\n          },\n          maxBodyHeight: \"450px\",\n          minBodyHeight: \"370px\",\n          headerStyle: {\n            backgroundColor: \"#358600\",\n            color: \"#fff\"\n          }\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t('general.emptyDataMessageTable'))\n          }\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              style: {\n                witdth: \"100%\"\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 27\n              }\n            }, /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 29\n              }\n            })));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this3.setState({\n            timePeriods: rows\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 21\n        }\n      })))))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"mr-12\",\n        onClick: function onClick() {\n          return _this3.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 15\n        }\n      }, t('general.cancel')), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 15\n        }\n      }, t('general.save'))))));\n    }\n  }]);\n\n  return ShiftWorkDialog;\n}(React.Component);\n\nexport default ShiftWorkDialog;","map":{"version":3,"sources":["C:/Users/ducbang/Desktop/12345/employee/client/src/app/views/ShiftWork/ShiftWorkDialog.js"],"names":["ConstantList","Grid","MuiThemeProvider","FormControlLabel","TextField","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","Radio","Dialog","DialogActions","IconButton","Icon","createMuiTheme","React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","DateFnsUtils","ValidatorForm","TextValidator","DialogContent","DialogTitle","Input","InputLabel","MenuItem","FormControl","Select","AsynchronousAutocomplete","Draggable","Paper","NotificationPopup","moment","SelectDepartmentPopup","createPurchasePlaning","addNewSalaryConfig","searchByPage","getAll","Autocomplete","KeyboardTimePicker","MuiPickersUtilsProvider","KeyboardDatePicker","KeyboardDateTimePicker","toast","addItem","updateItem","configure","autoClose","draggable","limit","PaperComponent","props","MaterialButton","t","i18n","item","isStatus","onSelect","ShiftWorkDialog","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","shouldOpenNotificationPopup","selectedItem","keyword","Notification","planingDate","Date","now","approvedDate","managementDepartment","shouldOpenSelectDepartmentPopup","status","note","shouldOpenProductPopup","product","salaryConfigItems","planingDepartment","listProduct","type","formToDate","endOf","formDate","startOf","listStatus","timePeriodsSelect","timePeriods","endTime","startTime","isTrueTime","totalHours","PURCHASE","indexOrder","openSelectDepartmentPopup","setState","handleSelectManagementDepartment","department","id","name","handleSelectDepartmentPopupClose","handleChange","event","source","persist","isActive","target","checked","value","handleSalaryConfigPopupClose","handleFormSubmit","code","length","warning","then","success","handleOKEditClose","catch","err","res","handleChangeDate","date","iteam","getTime","handleSelectMultiSalaryConfig","items","listIdProuct","map","el","salaryItem","indexOf","forEach","push","selectedTime","submitTime","index","i","open","handleClose","handleDialogClose","addValidationRule","handleSelect","receptionDepartment","productTypeCode","quantity","searchObject","pageIndex","pageSize","useStyles","classes","isEmpty","files","columns","title","field","width","headerStyle","paddingLeft","paddingRight","cellStyle","render","rowData","format","align","method","splice","alert","cursor","marginBottom","overflow","height","color","float","toolbar","selection","actionsColumnIndex","paging","search","padding","rowStyle","backgroundColor","tableData","maxBodyHeight","minBodyHeight","body","emptyDataSourceMessage","Toolbar","witdth","rows"],"mappings":"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","sourcesContent":["\r\nimport ConstantList from \"../../appConfig\";\r\nimport { Grid, MuiThemeProvider, FormControlLabel, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination, Radio, Dialog, DialogActions, IconButton, Icon, } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n// import { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport NotificationPopup from '../Component/NotificationPopup/NotificationPopup'\r\n// import SelectMutiSalaryItemPopup from \"./../SalaryConfig/SelectMutiSalaryItemPopup\"\r\nimport moment from \"moment\";\r\nimport SelectDepartmentPopup from './../SalaryConfig/SelectDepartmentPopup'\r\nimport {createPurchasePlaning, addNewSalaryConfig} from \"./../SalaryConfig/SalaryConfigService\"\r\nimport { searchByPage as getAll } from \"../PurchaseRequestStauts/PurchaseRequestStautsService\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\nimport { KeyboardTimePicker, MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardDateTimePicker } from '@material-ui/pickers'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { addItem, updateItem } from './ShiftWorkService';\r\n\r\ntoast.configure({\r\n  autoClose: 2000,\r\n  draggable: false,\r\n  limit: 3\r\n});\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  const isStatus = props.isStatus\r\n  return <div>\r\n    <IconButton size=\"small\" onClick={() => props.onSelect(item, 1)}>\r\n      <Icon fontSize=\"small\" color=\"error\">delete</Icon>\r\n    </IconButton>\r\n  </div>;\r\n}\r\nclass ShiftWorkDialog extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n  state = {\r\n    rowsPerPage: 1000,\r\n    page: 0,\r\n    data: [],\r\n    totalElements: 0,\r\n    itemList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    shouldOpenNotificationPopup: false,\r\n    selectedItem: {},\r\n    keyword: '',\r\n    Notification: \"\",\r\n    planingDate: Date.now(),\r\n    approvedDate: null,\r\n    managementDepartment: null,\r\n    shouldOpenSelectDepartmentPopup: false,\r\n    status: null,\r\n    note: null,\r\n    shouldOpenProductPopup: false,\r\n    product: null,\r\n    salaryConfigItems: [],\r\n    planingDepartment: null,\r\n    listProduct: [],\r\n    type: 1,\r\n    formToDate: moment().endOf('month'),\r\n    formDate: moment().startOf('month'),\r\n    listStatus: [],\r\n    timePeriodsSelect: [],\r\n    timePeriods: [],\r\n    endTime: new Date(),\r\n    startTime: new Date(),\r\n    isTrueTime: false,\r\n    totalHours:0\r\n  };\r\n  PURCHASE = {\r\n    \"name\": \"Đã duyệt\",\r\n    indexOrder: 2, //Đã duyệt\r\n  }\r\n  openSelectDepartmentPopup = () => {\r\n    this.setState({\r\n      shouldOpenSelectDepartmentPopup: true,\r\n    })\r\n  }\r\n  handleSelectManagementDepartment = (item) => {\r\n    let department = { id: item.id, name: item.name, }\r\n    this.setState({ department: department }, function () {\r\n      // this.search()\r\n      this.handleSelectDepartmentPopupClose()\r\n    })\r\n  }\r\n  handleSelectDepartmentPopupClose = () => {\r\n    this.setState({\r\n      shouldOpenSelectDepartmentPopup: false,\r\n    })\r\n  }\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  handleSalaryConfigPopupClose = () => {\r\n    this.setState({ shouldOpenProductPopup: false })\r\n  }\r\n  handleFormSubmit = () => {\r\n    let { id } = this.state;\r\n    let { code } = this.state;\r\n    let { t } = this.props\r\n    if (this.state.timePeriods == null || this.state.timePeriods.length === 0) {\r\n      toast.warning(\"Chưa chọn thời gian làm việc.\")\r\n      return\r\n    }\r\n    if (id) {\r\n      updateItem({\r\n        ...this.state\r\n      }, id).then(() => {\r\n        toast.success(\"Cập nhật ca làm việc thành công\")\r\n        this.props.handleOKEditClose();\r\n      }).catch((err) => {\r\n        toast.success(\"Có lỗi xảy ra khi cập nhật thông tin ca làm việc\");\r\n      })\r\n    } else {\r\n      addItem({\r\n        ...this.state\r\n      }).then((res) => {\r\n        toast.success(\"Tạo mới ca làm việc thành công\")\r\n        this.props.handleOKEditClose();\r\n      }).catch((err) => {\r\n        toast.success(\"Có lỗi xảy ra khi cập nhật thông tin ca làm việc\");\r\n      })\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    let { open, handleClose, item, handleDialogClose, } = this.props;\r\n    if (item.id) {\r\n      //debugger\r\n      this.setState({\r\n        ...item,\r\n        timePeriodsSelect: item.timePeriods\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    ValidatorForm.addValidationRule('isMaxDate', (value) => {\r\n      if (value.getTime() > Date.now()) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    ValidatorForm.addValidationRule('isTrueTime', (value) => {\r\n      if(value){\r\n        if (this.isTrueTime(this.state.startTime, this.state.endTime)) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n  isTrueTime = (startTime, endTime) => {\r\n    if (startTime > endTime) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  handleChangeDate = (date, name) => {\r\n    let { iteam } = this.state;\r\n    let totalHours =0;\r\n    if (iteam == null) {\r\n      iteam = {};\r\n    }\r\n    iteam[name] = date;\r\n    this.setState({ [name]: date });\r\n    if(this.state.endTime != null && this.state.startTime && name ===\"endTime\"){\r\n      if(date > this.state.startTime){\r\n        totalHours = (date - this.state.startTime.getTime())/3600000;\r\n        this.setState({totalHours:totalHours});\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSelectMultiSalaryConfig = (items) => {\r\n    let { salaryConfigItems } = this.state;\r\n    if (items != null && items.length > 0) {\r\n      let listIdProuct = salaryConfigItems.map(el => el.salaryItem.id);\r\n      if (listIdProuct.indexOf()) {\r\n        items.forEach(item => {\r\n          if (listIdProuct.indexOf(item.salaryItem.id) < 0) { ///check\r\n            salaryConfigItems.push(item);\r\n          }\r\n        })\r\n        this.setState({ salaryConfigItems: salaryConfigItems }, function () {\r\n          this.handleSalaryConfigPopupClose();\r\n        });\r\n      }\r\n\r\n    }\r\n  }\r\n  selectedTime = (name, value) => {\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n  submitTime = () => {\r\n    let { t } = this.props\r\n    var timePeriodsSelect = this.state.timePeriodsSelect;\r\n    var index = 1;\r\n    if (timePeriodsSelect.length === 0) {\r\n      if (!this.state.startTime.getTime() || !this.state.endTime.getTime()) {\r\n        index = 2\r\n      }\r\n      else if (this.state.startTime.getTime() >= this.state.endTime.getTime()) {\r\n        toast.warning(\"Thời gian bắt đầu không được lớn hơn thời gian kết thúc\")\r\n        index = 3;\r\n      }\r\n    }\r\n    else {\r\n      for (var i = 0; i < timePeriodsSelect.length; i++) {\r\n        if (!this.state.startTime.getTime() || !this.state.endTime.getTime()) {\r\n          index = 2;\r\n          // toast.warning(t(\"maintainRequestStatus.noti.noSelected\"))\r\n          break;\r\n        } else if (this.state.startTime.getTime() >= this.state.endTime.getTime()) {\r\n          // toast.warning(t(\"maintainRequestStatus.noti.selectedFalse\"))\r\n          index = 3;\r\n          break;\r\n        } else if (this.state.startTime.getTime() >= timePeriodsSelect[i].startTime.getTime() && this.state.startTime.getTime() <= timePeriodsSelect[i].endTime.getTime()) {\r\n          // toast.warning(t(\"maintainRequestStatus.noti.dupli_time\"))\r\n          index = 4;\r\n          break;\r\n        }\r\n        else if (this.state.endTime.getTime() >= timePeriodsSelect[i].startTime.getTime() && this.state.endTime.getTime() <= timePeriodsSelect[i].endTime.getTime()) {\r\n          // toast.warning(t(\"maintainRequestStatus.noti.dupli_time\"))\r\n          index = 4;\r\n          break;\r\n        }\r\n        else if (this.state.endTime.getTime() >= timePeriodsSelect[i].startTime.getTime() && this.state.startTime.getTime() <= timePeriodsSelect[i].startTime.getTime()) {\r\n          // toast.warning(t(\"maintainRequestStatus.noti.dupli_time\"))\r\n          index = 4;\r\n          break;\r\n        }\r\n        else if (this.state.endTime.getTime() >= timePeriodsSelect[i].endTime.getTime() && this.state.startTime.getTime() <= timePeriodsSelect[i].endTime.getTime()) {\r\n          // toast.warning(t(\"maintainRequestStatus.noti.dupli_time\"))\r\n          index = 4;\r\n          break;\r\n        }\r\n        else {\r\n        }\r\n      }\r\n    }\r\n    if (index === 1) {\r\n      timePeriodsSelect.push({\r\n        startTime: this.state.startTime,\r\n        endTime: this.state.endTime\r\n      })\r\n      this.setState({\r\n        timePeriodsSelect: [...timePeriodsSelect]\r\n      })\r\n    }\r\n    if (index === 4) {\r\n      toast.warning(\"Thời gian bị trùng\");\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { t, i18n, handleClose, handleSelect, selectedItem, open, handleDialogClose, item } = this.props;\r\n    let { keyword, product, receptionDepartment, productTypeCode, code, name, department, totalHours,isTrueTime,\r\n      status, note, quantity, shouldOpenProductPopup, salaryConfigItems, planingDepartment, managementDepartment, planingDate, shouldOpenNotificationPopup, Notification, approvedDate, shouldOpenSelectDepartmentPopup, timePeriodsSelect, startTime, endTime } = this.state;\r\n    let searchObject = { keyword: '', pageIndex: 0, pageSize: 10000 };\r\n    let now = Date.now();\r\n    let { useStyles } = this.props;\r\n    const classes = useStyles;\r\n    let { iteam } = this.state;\r\n    let isEmpty = true;\r\n    if (iteam == null) {\r\n      iteam = {};\r\n    }\r\n    if (iteam != null && iteam.files != null && iteam.files.length > 0) {\r\n      isEmpty = false;\r\n    }\r\n    let columns = [\r\n\r\n      {\r\n        title: t(\"Thời gian bắt đầu\"), field: \"startTime\", width: \"200px\",\r\n        headerStyle: {\r\n          paddingLeft: '12px',\r\n          paddingRight: '0px',\r\n        },\r\n        cellStyle: {\r\n          paddingLeft: '7px',\r\n          paddingRight: '0px',\r\n        },\r\n        render: rowData =>\r\n          (rowData.startTime) ? <span>{moment(rowData.startTime).format(\"DD/MM/YYYY, HH:mm\")}</span> : ''\r\n      },\r\n      {\r\n        title: t(\"Thời gian kết thúc\"), field: \"endTime\", align: \"left\", width: \"200\",\r\n        headerStyle: {\r\n          paddingLeft: '12px',\r\n          paddingRight: '0px',\r\n        },\r\n        cellStyle: {\r\n          paddingLeft: '7px',\r\n          paddingRight: '0px',\r\n        },\r\n        render: rowData =>\r\n          (rowData.endTime) ? <span>{moment(rowData.endTime).format(\"DD/MM/YYYY, HH:mm\")}</span> : ''\r\n      },\r\n      {\r\n        title: t(\"general.action\"),\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"100px\",\r\n        headerStyle: {\r\n          paddingLeft: '0px',\r\n          paddingRight: '0px',\r\n        },\r\n        cellStyle: {\r\n          paddingLeft: '7px',\r\n          paddingRight: '0px',\r\n        },\r\n        render: rowData => <MaterialButton item={rowData} isStatus={this.state.isStatus}\r\n          onSelect={(rowData, method) => {\r\n            // debugger\r\n            if (method === 0) {\r\n            } else if (method === 1) {\r\n\r\n              for (let index = 0; index < timePeriodsSelect.length; index++) {\r\n                const item = timePeriodsSelect[index]\r\n                if (\r\n                  rowData &&\r\n                  item\r\n                  //&& rowData.id === item.id\r\n                ) {\r\n                  timePeriodsSelect.splice(index, 1)\r\n                  this.setState({ timePeriodsSelect })\r\n                  break\r\n                }\r\n              }\r\n            } else {\r\n              alert('Call Selected Here:' + rowData.id)\r\n            }\r\n          }}\r\n        />\r\n      },\r\n    ];\r\n\r\n    return (\r\n\r\n      <Dialog open={open} PaperComponent={PaperComponent} maxWidth={\"md\"} scroll=\"paper\" fullWidth >\r\n        {shouldOpenNotificationPopup && (\r\n          <NotificationPopup\r\n            title={t('general.noti')}\r\n            open={shouldOpenNotificationPopup}\r\n            // onConfirmDialogClose={this.handleDialogClose}\r\n            onYesClick={this.handleDialogClose}\r\n            text={t(this.state.Notification)}\r\n            agree={t('general.agree')}\r\n          />\r\n        )}\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit} class=\"validator-form-scroll-dialog\">\r\n          <DialogTitle style={{ cursor: 'move', marginBottom: '0px', overflow: 'hidden' }} id=\"draggable-dialog-title\">\r\n            {this.state.id ? t(\"Sửa\") : t(\"Thêm\")}\r\n          </DialogTitle>\r\n          <DialogContent style={{ height: '450px', overflow: 'hidden' }}>\r\n            <Grid className=\"mb-16\" container spacing={2}>\r\n              <Grid item md={6} sm={12} xs={12} className=\"\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDateTimePicker\r\n                    label={<span className={\"\"}><span style={{ color: \"red\" }}>*</span>{t('Thời gian bắt đầu')}</span>}\r\n                    format=\"dd/MM/yyyy, HH:mm\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    name=\"startTime\"\r\n                    value={startTime}\r\n                    onChange={(startTime) => this.handleChangeDate(startTime, \"startTime\")}\r\n                    type={isTrueTime ? \"startTime\" : \"datetime\"}\r\n                    validators={['required', 'isTrueTime']}\r\n                    invalidDateMessage={\"Không đúng định dạng\"}\r\n                    errorMessages={[t(\"general.errorMessages_required\"), t(\"general.isTruePhoneNumer\")]}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    inputVariant=\"outlined\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid item md={6} sm={12} xs={12} className=\"\">\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDateTimePicker\r\n                    label={<span className={\"\"}><span style={{ color: \"red\" }}>*</span>{t('Thời gian kết thúc')}</span>}\r\n                    format=\"dd/MM/yyyy, HH:mm\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    name=\"endTime\"\r\n                    value={endTime}\r\n                    type={isTrueTime ? \"endTime\" : \"datetime\"}\r\n                    validators={['required', 'isTrueTime']}\r\n                    invalidDateMessage={\"Không đúng định dạng\"}\r\n                    errorMessages={[t(\"general.errorMessages_required\"), t(\"general.isTruePhoneNumer\")]}\r\n                    onChange={(endTime) => this.handleChangeDate(endTime, \"endTime\")}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                    inputVariant=\"outlined\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid className=\"\" item md={3} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100\"\r\n                  label={<span><span style={{ color: \"red\" }}>*</span>{t(\"Tên\")}</span>}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={['required']}\r\n                  errorMessages=\"Trường này không được để trống\"\r\n                />\r\n              </Grid>\r\n              <Grid className=\"\" item md={3} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100\"\r\n                  label={<span><span style={{ color: \"red\" }}>*</span>{t(\"Mã\")}</span>}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={['required']}\r\n                  errorMessages=\"Trường này không được để trống\"\r\n                />\r\n              </Grid>\r\n              <Grid className=\"\" item md={3} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100\"\r\n                  label={<span><span style={{ color: \"red\" }}>*</span>{t(\"Tổng thời gian\")}</span>}\r\n                  onChange={this.handleChange}\r\n                  type=\"number\"\r\n                  name=\"totalHours\"\r\n                  value={totalHours}\r\n                  disabled = {true}\r\n                  validators={['required']}\r\n                  errorMessages=\"Trường này không được để trống\"\r\n                />\r\n              </Grid>\r\n              <Grid className=\"\" item md={1}>\r\n                <Button\r\n                  style={{ float: 'right' }}\r\n                  size=\"small\"\r\n                  className=\"mt-10\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.submitTime}\r\n                >\r\n                  {t('general.select')}\r\n                </Button>\r\n              </Grid>\r\n              <Grid className=\"mb-16 mt-16\" container spacing={2}>\r\n                <Grid container spacing={2} >\r\n                  <Grid item xs={12}>\r\n                    <MaterialTable\r\n                      data={this.state.timePeriodsSelect ? this.state.timePeriodsSelect : []}\r\n                      columns={columns}\r\n                      options={{\r\n                        toolbar: false,\r\n                        selection: true,\r\n                        actionsColumnIndex: -1,\r\n                        paging: false,\r\n                        search: false,\r\n                        padding: 'dense',\r\n                        rowStyle: (rowData) => ({\r\n                          backgroundColor:\r\n                            rowData.tableData.id % 2 === 1 ? \"#EEE\" : \"#FFF\",\r\n                        }),\r\n                        maxBodyHeight: \"450px\",\r\n                        minBodyHeight: \"370px\",\r\n                        headerStyle: {\r\n                          backgroundColor: \"#358600\",\r\n                          color: \"#fff\",\r\n                        },\r\n                      }}\r\n                      localization={{\r\n                        body: {\r\n                          emptyDataSourceMessage: `${t('general.emptyDataMessageTable')}`\r\n                        }\r\n                      }}\r\n                      components={{\r\n                        Toolbar: props => (\r\n                          <div style={{ witdth: \"100%\" }}>\r\n                            <MTableToolbar {...props} />\r\n                          </div>\r\n                        ),\r\n                      }}\r\n                      onSelectionChange={(rows) => {\r\n                        this.setState({\r\n                          timePeriods: rows\r\n                        })\r\n                      }}\r\n\r\n                    />\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <div className=\"flex flex-space-between flex-middle\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className=\"mr-12\"\r\n                onClick={() => this.props.handleClose()}\r\n              >\r\n\r\n                {t('general.cancel')}\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                {t('general.save')}\r\n              </Button>\r\n\r\n            </div>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog >\r\n    );\r\n  }\r\n}\r\nexport default ShiftWorkDialog;"]},"metadata":{},"sourceType":"module"}