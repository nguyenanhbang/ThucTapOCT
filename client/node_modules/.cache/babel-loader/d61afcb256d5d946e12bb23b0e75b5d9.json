{"ast":null,"code":"import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getISOWeek from \"../getISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name setISOWeek\r\n * @category ISO Week Helpers\r\n * @summary Set the ISO week to the given date.\r\n *\r\n * @description\r\n * Set the ISO week to the given date, saving the weekday number.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to be changed\r\n * @param {Number} isoWeek - the ISO week of the new date\r\n * @returns {Date} the new date with the ISO week set\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Set the 53rd ISO week to 7 August 2004:\r\n * var result = setISOWeek(new Date(2004, 7, 7), 53)\r\n * //=> Sat Jan 01 2005 00:00:00\r\n */\n\nexport default function setISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getISOWeek(date) - isoWeek;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","map":null,"metadata":{},"sourceType":"module"}