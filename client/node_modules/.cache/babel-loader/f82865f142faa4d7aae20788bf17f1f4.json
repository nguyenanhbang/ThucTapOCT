{"ast":null,"code":"import startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport addWeeks from \"../addWeeks/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\r\n * @name getISOWeeksInYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\r\n *\r\n * @description\r\n * Get the number of weeks in an ISO week-numbering year of the given date.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the given date\r\n * @returns {Number} the number of ISO weeks in a year\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // How many weeks are in ISO week-numbering year 2015?\r\n * const result = getISOWeeksInYear(new Date(2015, 1, 11))\r\n * //=> 53\r\n */\n\nexport default function getISOWeeksInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var thisYear = startOfISOWeekYear(dirtyDate);\n  var nextYear = startOfISOWeekYear(addWeeks(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}","map":null,"metadata":{},"sourceType":"module"}