{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\src\\\\app\\\\EgretLayout\\\\EgretTheme\\\\EgretTheme.jsx\";\nimport React, { Component } from \"react\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\"; // import cssVars from \"css-vars-ponyfill\";\n\nimport { Helmet } from \"react-helmet\";\n\nvar EgretTheme = /*#__PURE__*/function (_Component) {\n  _inherits(EgretTheme, _Component);\n\n  function EgretTheme() {\n    _classCallCheck(this, EgretTheme);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EgretTheme).apply(this, arguments));\n  }\n\n  _createClass(EgretTheme, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {// cssVars();\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {// cssVars();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          settings = _this$props.settings;\n\n      var activeTheme = _objectSpread({}, settings.themes[settings.activeTheme]); // console.log(activeTheme);\n      // activeTheme.direction = settings.direction;\n\n\n      return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n        theme: activeTheme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"style\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, \"\\n              :root {\\n                --primary: \".concat(activeTheme.palette.primary.main, \";\\n                --secondary: \").concat(activeTheme.palette.secondary.main, \";\\n                --error: \").concat(activeTheme.palette.error.main, \";\\n                --bg-default: \").concat(activeTheme.palette.background.default, \"; \\n                --bg-paper: \").concat(activeTheme.palette.background.paper, \"; \\n                --text-body: \").concat(activeTheme.palette.text.primary, \"; \\n                --text-muted: \").concat(activeTheme.palette.text.secondary, \"; \\n                --text-hint: \").concat(activeTheme.palette.text.hint, \"; \\n                --font: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\n                --font-caption: 400 12px/20px var(--font);\\n                --font-body-1: 400 14px/20px var(--font);\\n                --font-body-2: 500 14px/24px var(--font);\\n                --font-subheading-1: 400 15px/24px var(--font);\\n                --font-subheading-2: 400 16px/28px var(--font);\\n                --font-headline: 400 24px/32px var(--font);\\n                --font-title: 500 18px/26px var(--font);\\n                --font-display-1: 400 34px/40px var(--font);\\n                --font-display-2: 400 45px/48px var(--font);\\n                --font-display-3: 400 56px/56px var(--font);\\n                --font-display-4: 300 112px/112px var(--font);\\n                \\n                \").concat(activeTheme.shadows.map(function (shadow, i) {\n        return \"--elevation-z\".concat(i, \": \").concat(shadow, \";\");\n      }).join(\" \"), \" \\n\\n              }\\n            \"))), children);\n    }\n  }]);\n\n  return EgretTheme;\n}(Component);\n\nEgretTheme.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    settings: state.layout.settings,\n    setLayoutSettings: PropTypes.func.isRequired\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setLayoutSettings: setLayoutSettings\n})(EgretTheme);","map":{"version":3,"sources":["C:/Users/ducbang/Desktop/12345/employee/client/src/app/EgretLayout/EgretTheme/EgretTheme.jsx"],"names":["React","Component","MuiThemeProvider","connect","PropTypes","setLayoutSettings","Helmet","EgretTheme","props","children","settings","activeTheme","themes","palette","primary","main","secondary","error","background","default","paper","text","hint","shadows","map","shadow","i","join","propTypes","func","isRequired","object","mapStateToProps","state","layout"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,iBAAT,QAAkC,iCAAlC,C,CACA;;AAEA,SAASC,MAAT,QAAuB,cAAvB;;IAEMC,U;;;;;;;;;;;gDACwB,CAC1B;AACD;;;0CAEqB,CACpB;AACD;;;6BAEQ;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACDC,QADC,eACDA,QADC;AAAA,UACSC,QADT,eACSA,QADT;;AAEP,UAAIC,WAAW,qBAAQD,QAAQ,CAACE,MAAT,CAAgBF,QAAQ,CAACC,WAAzB,CAAR,CAAf,CAFO,CAGP;AAEA;;;AACA,0BACE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEA,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAGmBA,WAAW,CAACE,OAAZ,CAAoBC,OAApB,CAA4BC,IAH/C,6CAIqBJ,WAAW,CAACE,OAAZ,CAAoBG,SAApB,CAA8BD,IAJnD,yCAKiBJ,WAAW,CAACE,OAAZ,CAAoBI,KAApB,CAA0BF,IAL3C,8CAMsBJ,WAAW,CAACE,OAAZ,CAAoBK,UAApB,CAA+BC,OANrD,6CAOoBR,WAAW,CAACE,OAAZ,CAAoBK,UAApB,CAA+BE,KAPnD,8CAQqBT,WAAW,CAACE,OAAZ,CAAoBQ,IAApB,CAAyBP,OAR9C,+CASsBH,WAAW,CAACE,OAAZ,CAAoBQ,IAApB,CAAyBL,SAT/C,8CAUqBL,WAAW,CAACE,OAAZ,CAAoBQ,IAApB,CAAyBC,IAV9C,uxBAwBQX,WAAW,CAACY,OAAZ,CACCC,GADD,CACK,UAACC,MAAD,EAASC,CAAT,EAAe;AAClB,sCAAuBA,CAAvB,eAA6BD,MAA7B;AACD,OAHD,EAICE,IAJD,CAIM,GAJN,CAxBR,wCADF,CADF,EAqCGlB,QArCH,CADF;AAyCD;;;;EAxDsBR,S;;AA2DzBM,UAAU,CAACqB,SAAX,GAAuB;AACrBvB,EAAAA,iBAAiB,EAAED,SAAS,CAACyB,IAAV,CAAeC,UADb;AAErBpB,EAAAA,QAAQ,EAAEN,SAAS,CAAC2B,MAAV,CAAiBD;AAFN,CAAvB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCvB,IAAAA,QAAQ,EAAEuB,KAAK,CAACC,MAAN,CAAaxB,QADS;AAEhCL,IAAAA,iBAAiB,EAAED,SAAS,CAACyB,IAAV,CAAeC;AAFF,GAAL;AAAA,CAA7B;;AAKA,eAAe3B,OAAO,CACpB6B,eADoB,EAEpB;AAAE3B,EAAAA,iBAAiB,EAAjBA;AAAF,CAFoB,CAAP,CAGbE,UAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MuiThemeProvider } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\n// import cssVars from \"css-vars-ponyfill\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass EgretTheme extends Component {\r\n  componentWillReceiveProps() {\r\n    // cssVars();\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    // cssVars();\r\n  }\r\n\r\n  render() {\r\n    let { children, settings } = this.props;\r\n    let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n    // console.log(activeTheme);\r\n\r\n    // activeTheme.direction = settings.direction;\r\n    return (\r\n      <MuiThemeProvider theme={activeTheme}>\r\n        <Helmet>\r\n          <style>\r\n            {`\r\n              :root {\r\n                --primary: ${activeTheme.palette.primary.main};\r\n                --secondary: ${activeTheme.palette.secondary.main};\r\n                --error: ${activeTheme.palette.error.main};\r\n                --bg-default: ${activeTheme.palette.background.default}; \r\n                --bg-paper: ${activeTheme.palette.background.paper}; \r\n                --text-body: ${activeTheme.palette.text.primary}; \r\n                --text-muted: ${activeTheme.palette.text.secondary}; \r\n                --text-hint: ${activeTheme.palette.text.hint}; \r\n                --font: Roboto,\"Helvetica Neue\",sans-serif;\r\n                --font-caption: 400 12px/20px var(--font);\r\n                --font-body-1: 400 14px/20px var(--font);\r\n                --font-body-2: 500 14px/24px var(--font);\r\n                --font-subheading-1: 400 15px/24px var(--font);\r\n                --font-subheading-2: 400 16px/28px var(--font);\r\n                --font-headline: 400 24px/32px var(--font);\r\n                --font-title: 500 18px/26px var(--font);\r\n                --font-display-1: 400 34px/40px var(--font);\r\n                --font-display-2: 400 45px/48px var(--font);\r\n                --font-display-3: 400 56px/56px var(--font);\r\n                --font-display-4: 300 112px/112px var(--font);\r\n                \r\n                ${activeTheme.shadows\r\n                  .map((shadow, i) => {\r\n                    return `--elevation-z${i}: ${shadow};`;\r\n                  })\r\n                  .join(\" \")} \r\n\r\n              }\r\n            `}\r\n          </style>\r\n        </Helmet>\r\n\r\n        {children}\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nEgretTheme.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  setLayoutSettings: PropTypes.func.isRequired\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setLayoutSettings }\r\n)(EgretTheme);\r\n"]},"metadata":{},"sourceType":"module"}