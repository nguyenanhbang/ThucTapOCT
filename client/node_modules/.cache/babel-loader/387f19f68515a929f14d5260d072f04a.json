{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport ClockPointer from './ClockPointer';\nimport ClockType from '../../constants/ClockType';\nimport { getHours, getMinutes } from '../../_helpers/time-utils';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nexport var Clock = /*#__PURE__*/function (_React$Component) {\n  _inherits(Clock, _React$Component);\n\n  function Clock() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Clock);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Clock)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.isMoving = false;\n\n    _this.handleTouchMove = function (e) {\n      _this.isMoving = true;\n\n      _this.setTime(e);\n    };\n\n    _this.handleTouchEnd = function (e) {\n      if (_this.isMoving) {\n        _this.setTime(e, true);\n\n        _this.isMoving = false;\n      }\n    };\n\n    _this.handleMove = function (e) {\n      e.preventDefault();\n      e.stopPropagation(); // MouseEvent.which is deprecated, but MouseEvent.buttons is not supported in Safari\n\n      var isButtonPressed = typeof e.buttons === 'undefined' ? e.nativeEvent.which === 1 : e.buttons === 1;\n\n      if (isButtonPressed) {\n        _this.setTime(e.nativeEvent, false);\n      }\n    };\n\n    _this.handleMouseUp = function (e) {\n      if (_this.isMoving) {\n        _this.isMoving = false;\n      }\n\n      _this.setTime(e.nativeEvent, true);\n    };\n\n    _this.hasSelected = function () {\n      var _this$props = _this.props,\n          type = _this$props.type,\n          value = _this$props.value;\n\n      if (type === ClockType.HOURS) {\n        return true;\n      }\n\n      return value % 5 === 0;\n    };\n\n    return _this;\n  }\n\n  _createClass(Clock, [{\n    key: \"setTime\",\n    value: function setTime(e) {\n      var isFinish = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var offsetX = e.offsetX,\n          offsetY = e.offsetY;\n\n      if (typeof offsetX === 'undefined') {\n        var rect = e.target.getBoundingClientRect();\n        offsetX = e.changedTouches[0].clientX - rect.left;\n        offsetY = e.changedTouches[0].clientY - rect.top;\n      }\n\n      var value = this.props.type === ClockType.SECONDS || this.props.type === ClockType.MINUTES ? getMinutes(offsetX, offsetY, this.props.minutesStep) : getHours(offsetX, offsetY, Boolean(this.props.ampm));\n      this.props.onChange(value, isFinish);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          value = _this$props2.value,\n          children = _this$props2.children,\n          type = _this$props2.type,\n          ampm = _this$props2.ampm;\n      var isPointerInner = !ampm && type === ClockType.HOURS && (value < 1 || value > 12);\n      return React.createElement(\"div\", {\n        className: classes.container\n      }, React.createElement(\"div\", {\n        className: classes.clock\n      }, React.createElement(\"div\", {\n        role: \"menu\",\n        tabIndex: -1,\n        className: classes.squareMask,\n        onTouchMove: this.handleTouchMove,\n        onTouchEnd: this.handleTouchEnd,\n        onMouseUp: this.handleMouseUp,\n        onMouseMove: this.handleMove\n      }), React.createElement(\"div\", {\n        className: classes.pin\n      }), React.createElement(ClockPointer, {\n        type: type,\n        value: value,\n        isInner: isPointerInner,\n        hasSelected: this.hasSelected()\n      }), children));\n    }\n  }]);\n\n  return Clock;\n}(React.Component);\nprocess.env.NODE_ENV !== \"production\" ? Clock.propTypes = {\n  type: PropTypes.oneOf(Object.keys(ClockType).map(function (key) {\n    return ClockType[key];\n  })).isRequired,\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  children: PropTypes.arrayOf(PropTypes.node).isRequired,\n  ampm: PropTypes.bool,\n  minutesStep: PropTypes.number,\n  innerRef: PropTypes.any\n} : void 0;\nClock.defaultProps = {\n  ampm: false,\n  minutesStep: 1\n};\nexport var styles = function styles(theme) {\n  return createStyles({\n    container: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-end',\n      margin: \"\".concat(theme.spacing(2), \"px 0 \").concat(theme.spacing(1), \"px\")\n    },\n    clock: {\n      backgroundColor: 'rgba(0,0,0,.07)',\n      borderRadius: '50%',\n      height: 260,\n      width: 260,\n      position: 'relative',\n      pointerEvents: 'none',\n      zIndex: 1\n    },\n    squareMask: {\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'auto',\n      outline: 'none',\n      touchActions: 'none',\n      userSelect: 'none',\n      '&:active': {\n        cursor: 'move'\n      }\n    },\n    pin: {\n      width: 6,\n      height: 6,\n      borderRadius: '50%',\n      backgroundColor: theme.palette.primary.main,\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)'\n    }\n  });\n};\nexport default withStyles(styles, {\n  name: 'MuiPickersClock'\n})(Clock);","map":null,"metadata":{},"sourceType":"module"}