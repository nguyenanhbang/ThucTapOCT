{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ducbang\\\\Desktop\\\\12345\\\\employee\\\\client\\\\src\\\\app\\\\views\\\\sessions\\\\ForgotPassword.jsx\";\nimport React, { Component } from \"react\";\nimport ConstantList from \"../../appConfig\";\nimport { Card, Grid, Button, withStyles, CircularProgress } from \"@material-ui/core\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { useTranslation } from 'react-i18next';\nimport { withRouter } from \"react-router-dom\";\nimport { resetPassword } from \"../../redux/actions/LoginActions\";\n\nvar ForgotPassword = /*#__PURE__*/function (_Component) {\n  _inherits(ForgotPassword, _Component);\n\n  function ForgotPassword(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotPassword).call(this, props));\n    _this.state = {\n      email: \"\"\n    };\n\n    _this.handleChange = function (event) {\n      event.persist();\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      _this.props.resetPassword(_objectSpread({}, _this.state));\n    };\n\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var email = this.state.email;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"signup flex flex-center w-100 h-100vh\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"signup-card position-relative y-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 5,\n        md: 5,\n        sm: 5,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-32 flex flex-center flex-middle h-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/assets/images/illustrations/dreamer.svg\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 7,\n        md: 7,\n        sm: 7,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-36 h-100 bg-light-gray position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"mb-24 w-100\",\n        variant: \"outlined\",\n        label: \"Email\",\n        onChange: this.handleChange,\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        validators: [\"required\", \"isEmail\"],\n        errorMessages: [t(\"general.errorMessages_required\"), t(\"general.errorMessages_email_valid\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 23\n        }\n      }, t(\"resetPassword\")), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-16 mr-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 23\n        }\n      }, t(\"or\")), /*#__PURE__*/React.createElement(Button, {\n        className: \"capitalize\",\n        variant: \"contained\",\n        onClick: function onClick() {\n          return _this2.props.history.push(ConstantList.ROOT_PATH + \"session/signin\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }\n      }, t(\"sign_in.title\"))))))))));\n    }\n  }]);\n\n  return ForgotPassword;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    resetPassword: PropTypes.func.isRequired,\n    login: state.login\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  resetPassword: resetPassword\n})(ForgotPassword));","map":{"version":3,"sources":["C:/Users/ducbang/Desktop/12345/employee/client/src/app/views/sessions/ForgotPassword.jsx"],"names":["React","Component","ConstantList","Card","Grid","Button","withStyles","CircularProgress","TextValidator","ValidatorForm","connect","PropTypes","useTranslation","withRouter","resetPassword","ForgotPassword","props","state","email","handleChange","event","persist","setState","target","name","value","handleFormSubmit","t","i18n","history","push","ROOT_PATH","mapStateToProps","func","isRequired","login"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Button,\r\n  withStyles,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { resetPassword } from \"../../redux/actions/LoginActions\";\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor(props){\r\n    super(props);\r\n  };\r\n  state = {\r\n    email: \"\"\r\n  };\r\n  handleChange = event => {\r\n    event.persist();\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  handleFormSubmit = () => {\r\n    this.props.resetPassword({ ...this.state });\r\n  };\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let { email } = this.state;\r\n\r\n    return (\r\n      <div className=\"signup flex flex-center w-100 h-100vh\">\r\n        <div className=\"p-8\">\r\n          <Card className=\"signup-card position-relative y-center\">\r\n            <Grid container>\r\n              <Grid item lg={5} md={5} sm={5} xs={12}>\r\n                <div className=\"p-32 flex flex-center flex-middle h-100\">\r\n                  <img src=\"/assets/images/illustrations/dreamer.svg\" alt=\"\" />\r\n                </div>\r\n              </Grid>\r\n              <Grid item lg={7} md={7} sm={7} xs={12}>\r\n                <div className=\"p-36 h-100 bg-light-gray position-relative\">\r\n                  <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n                    <TextValidator\r\n                      className=\"mb-24 w-100\"\r\n                      variant=\"outlined\"\r\n                      label=\"Email\"\r\n                      onChange={this.handleChange}\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      validators={[\"required\", \"isEmail\"]}\r\n                      errorMessages={[\r\n                        t(\"general.errorMessages_required\"),\r\n                        t(\"general.errorMessages_email_valid\")\r\n                      ]}\r\n                    />\r\n                    <div className=\"flex flex-middle\">\r\n                      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                        {t(\"resetPassword\")}\r\n                      </Button>\r\n                      <span className=\"ml-16 mr-16\">{t(\"or\")}</span>\r\n                      <Button\r\n                        className=\"capitalize\"\r\n                        variant=\"contained\"\r\n                        onClick={() =>\r\n                          this.props.history.push(ConstantList.ROOT_PATH+\"session/signin\")\r\n                        }>\r\n                          {t(\"sign_in.title\")}\r\n                      </Button>\r\n                    </div>\r\n                  </ValidatorForm>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  resetPassword: PropTypes.func.isRequired,\r\n  login: state.login\r\n});\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    { resetPassword }\r\n  )(ForgotPassword)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}