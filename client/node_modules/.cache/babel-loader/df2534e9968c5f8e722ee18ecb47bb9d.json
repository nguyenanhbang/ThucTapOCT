{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\employee-main\\\\client\\\\src\\\\app\\\\views\\\\Menus\\\\Menu.jsx\";\nimport { Grid, TextField, IconButton, Icon, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination, Tooltip, FormControl, Input, InputAdornment } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport React, { Component } from 'react';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { getFlatRootChild, getAllByRoot, deleteItem, saveItem, getItemById, getAllItem, deleteCheckItem } from './MenuService';\nimport MenuDialog from './MenuDialog';\nimport { Breadcrumb, ConfirmationDialog } from 'egret';\nimport { Helmet } from 'react-helmet';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Link } from \"react-router-dom\";\nimport NotificationPopup from '../Component/NotificationPopup/NotificationPopup';\nvar LightTooltip = withStyles(function (theme) {\n  return {\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: 'rgba(0, 0, 0, 0.87)',\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n      position: \"absolute\",\n      top: '-15px',\n      left: '-30px',\n      width: '80px'\n    }\n  };\n})(Tooltip);\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"none_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LightTooltip, {\n    title: t('general.editIcon'),\n    placement: \"right-end\",\n    enterDelay: 300,\n    leaveDelay: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"edit\"))), /*#__PURE__*/React.createElement(LightTooltip, {\n    title: t('general.deleteIcon'),\n    placement: \"right-end\",\n    enterDelay: 300,\n    leaveDelay: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"delete\"))));\n}\n\nvar Menu = /*#__PURE__*/function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  function Menu(props) {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Menu).call(this, props)); //this.state = {keyword: ''};\n\n    _this.state = {\n      rowsPerPage: 5,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDeleteAllDialog: false,\n      keyword: '',\n      shouldOpenNotificationPopup: false,\n      Notification: ''\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === 'Enter') {\n        _this.search();\n      }\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.keyword = '';\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      getAllByRoot().then(function (_ref) {\n        var data = _ref.data;\n\n        var itemList = _toConsumableArray(data);\n\n        var list = [];\n        itemList.forEach(function (item) {\n          var items = _this.getListItemChild(item);\n\n          list.push.apply(list, _toConsumableArray(items));\n        });\n\n        _this.setState({\n          itemList: list\n        });\n      });\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page: page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      }, function () {\n        _this.updatePageData();\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id: id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false,\n        shouldOpenNotificationPopup: false,\n        data: []\n      }, function () {\n        _this.updatePageData();\n      });\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n\n      _this.setPage(0);\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id: id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleConfirmationResponse = function () {\n      if (_this.state.itemList.length === 1 && _this.state.page === 1) {\n        var count = _this.state.page - 1;\n\n        _this.setState({\n          page: count\n        });\n      }\n\n      deleteItem(_this.state.id).then(function () {\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.handleEditItem = function (item) {\n      _this.setState({\n        item: item,\n        shouldOpenEditorDialog: true\n      });\n    };\n\n    _this.handleDeleteButtonClick = function () {\n      if (typeof _this.state.data === 'undefined' || _this.state.data.length === 0) {\n        _this.setState({\n          shouldOpenNotificationPopup: true,\n          Notification: \"general.noti_check_data\"\n        }); // alert('Chưa chọn dữ liệu')\n\n      } else {\n        _this.setState({\n          shouldOpenConfirmationDeleteAllDialog: true\n        });\n      }\n    };\n\n    _this.handleDeleteAll = function (event) {\n      _this.handleDeleteList(_this.state.data).then(function () {\n        _this.updatePageData(); // this.handleDialogClose()\n\n      });\n    };\n\n    _this.handleTextChange = _this.handleTextChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"handleTextChange\",\n    value: function handleTextChange(event) {\n      this.setState({\n        keyword: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"getListItemChild\",\n    value: function getListItemChild(item) {\n      var _this2 = this;\n\n      var result = [];\n      var root = {};\n      root.name = item.name;\n      root.description = item.description;\n      root.code = item.code;\n      root.icon = item.icon;\n      root.path = item.path;\n      root.id = item.id;\n      root.parentId = item.parentId;\n      result.push(root);\n\n      if (item.children) {\n        item.children.forEach(function (child) {\n          var childs = _this2.getListItemChild(child);\n\n          result.push.apply(result, _toConsumableArray(childs));\n        });\n      }\n\n      return result;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          shouldOpenNotificationPopup = _this$state.shouldOpenNotificationPopup;\n      var TitlePage = t('menu.title');\n      var columns = [{\n        title: t('general.action'),\n        field: 'custom',\n        align: 'left',\n        width: '120px',\n        headerStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"0px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"0px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(MaterialButton, {\n            item: rowData,\n            onSelect: function onSelect(rowData, method) {\n              if (method === 0) {\n                getItemById(rowData.id).then(function (_ref2) {\n                  var data = _ref2.data;\n\n                  if (data.parent === null) {\n                    data.parent = {};\n                  }\n\n                  _this3.setState({\n                    item: data,\n                    shouldOpenEditorDialog: true\n                  });\n                });\n              } else if (method === 1) {\n                _this3.handleDelete(rowData.id);\n              } else {\n                alert('Call Selected Here:' + rowData.id);\n              }\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 11\n            }\n          });\n        }\n      }, {\n        title: t('menu.description'),\n        field: 'description',\n        align: 'left',\n        width: '150',\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t('menu.name'),\n        field: 'name',\n        width: '150',\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t('menu.code'),\n        field: 'code',\n        align: 'left',\n        width: '150',\n        headerStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }\n      }, TitlePage, \" | \", t('web_site'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"Dashboard.manage\"),\n          path: \"/directory/apartment\"\n        }, {\n          name: TitlePage\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"space-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"align-bottom mr-16 mb-16\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.handleEditItem(null);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }\n      }, t('general.add')), this.state.shouldOpenConfirmationDeleteAllDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: this.state.shouldOpenConfirmationDeleteAllDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleDeleteAll,\n        text: t('general.deleteAllConfirm'),\n        cancel: t('general.cancel'),\n        agree: t('general.agree'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }\n      }, this.state.shouldOpenEditorDialog && /*#__PURE__*/React.createElement(MenuDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: this.state.shouldOpenEditorDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: this.state.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 17\n        }\n      }), shouldOpenNotificationPopup && /*#__PURE__*/React.createElement(NotificationPopup, {\n        title: t('general.noti'),\n        open: shouldOpenNotificationPopup // onConfirmDialogClose={this.handleDialogClose}\n        ,\n        onYesClick: this.handleDialogClose,\n        text: t(this.state.Notification),\n        agree: t('general.agree'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 17\n        }\n      }), this.state.shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: this.state.shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: t(\"DeleteConfirm\"),\n        Yes: t(\"general.Yes\"),\n        No: t(\"general.No\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t('general.list'),\n        data: this.state.itemList,\n        columns: columns //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n        ,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t('general.emptyDataMessageTable'))\n          },\n          toolbar: {\n            // nRowsSelected: '${t('general.selects')}',\n            nRowsSelected: \"\".concat(t('general.selects'))\n          }\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          maxBodyHeight: '450px',\n          minBodyHeight: '370px',\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 37\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this3.setState({\n            data: rows\n          });\n        },\n        [\"localization\"]: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref3) {\n          var from = _ref3.from,\n              to = _ref3.to,\n              count = _ref3.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: this.state.totalElements,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nexport default Menu;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/employee-main/client/src/app/views/Menus/Menu.jsx"],"names":["Grid","TextField","IconButton","Icon","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","Tooltip","FormControl","Input","InputAdornment","createMuiTheme","React","Component","ValidatorForm","TextValidator","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","getFlatRootChild","getAllByRoot","deleteItem","saveItem","getItemById","getAllItem","deleteCheckItem","MenuDialog","Breadcrumb","ConfirmationDialog","Helmet","withStyles","SearchIcon","Link","NotificationPopup","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","position","top","left","width","MaterialButton","props","t","i18n","item","onSelect","Menu","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","shouldOpenConfirmationDeleteAllDialog","keyword","shouldOpenNotificationPopup","Notification","handleKeyDownEnterSearch","e","key","search","updatePageData","searchObject","pageIndex","pageSize","then","list","forEach","items","getListItemChild","push","setState","setPage","setRowsPerPage","event","target","value","handleChangePage","newPage","handleOKEditClose","handleDelete","id","handleDialogClose","handleConfirmationResponse","length","count","handleEditItem","handleDeleteButtonClick","handleDeleteAll","handleDeleteList","handleTextChange","bind","result","root","name","description","code","icon","path","parentId","children","child","childs","TitlePage","columns","title","field","align","headerStyle","minWidth","paddingLeft","paddingRight","cellStyle","textAlign","render","rowData","method","parent","alert","row","rows","find","a","body","emptyDataSourceMessage","toolbar","nRowsSelected","selection","actionsColumnIndex","paging","rowStyle","index","maxBodyHeight","minBodyHeight","padding","Toolbar","from","to"],"mappings":"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","sourcesContent":["import {\n  Grid,\n  TextField,\n  IconButton,\n  Icon,\n  Button,\n  TableHead,\n  TableCell,\n  TableRow,\n  Checkbox,\n  TablePagination,\n  Tooltip,\n  FormControl,\n  Input, InputAdornment,\n} from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport React, { Component } from 'react'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\nimport MaterialTable, {\n  MTableToolbar,\n  Chip,\n  MTableBody,\n  MTableHeader,\n} from 'material-table'\nimport { useTranslation, withTranslation, Trans } from 'react-i18next'\nimport {\n  getFlatRootChild,\n  getAllByRoot,\n  deleteItem,\n  saveItem,\n  getItemById,\n  getAllItem,\n  deleteCheckItem\n} from './MenuService'\nimport MenuDialog from './MenuDialog'\nimport { Breadcrumb, ConfirmationDialog } from 'egret'\nimport { Helmet } from 'react-helmet'\nimport { withStyles } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Link } from \"react-router-dom\";\nimport NotificationPopup from '../Component/NotificationPopup/NotificationPopup'\n\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n    position: \"absolute\",\n    top: '-15px',\n    left: '-30px',\n    width: '80px'\n  }\n}))(Tooltip);\n\nfunction MaterialButton(props) {\n  const { t, i18n } = useTranslation()\n  const item = props.item\n  return (\n    <div className=\"none_wrap\">\n      <LightTooltip title={t('general.editIcon')} placement=\"right-end\" enterDelay={300} leaveDelay={200}>\n        <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\n          <Icon fontSize=\"small\" color=\"primary\">edit</Icon>\n        </IconButton>\n      </LightTooltip>\n      <LightTooltip title={t('general.deleteIcon')} placement=\"right-end\" enterDelay={300} leaveDelay={200}>\n        <IconButton size=\"small\" onClick={() => props.onSelect(item, 1)}>\n          <Icon fontSize=\"small\" color=\"error\">delete</Icon>\n        </IconButton>\n      </LightTooltip>\n    </div>\n  )\n}\nclass Menu extends React.Component {\n  state = {\n    rowsPerPage: 5,\n    page: 0,\n    data: [],\n    totalElements: 0,\n    itemList: [],\n    shouldOpenEditorDialog: false,\n    shouldOpenConfirmationDialog: false,\n    shouldOpenConfirmationDeleteAllDialog: false,\n    keyword: '',\n    shouldOpenNotificationPopup: false,\n    Notification: ''\n  }\n  constructor(props) {\n    super(props)\n    //this.state = {keyword: ''};\n    this.handleTextChange = this.handleTextChange.bind(this)\n  }\n  handleTextChange(event) {\n    this.setState({ keyword: event.target.value })\n  }\n\n  handleKeyDownEnterSearch = (e) => {\n    if (e.key === 'Enter') {\n      this.search()\n    }\n  }\n  componentDidMount() {\n    this.updatePageData()\n  }\n  getListItemChild(item) {\n    var result = [];\n    var root = {};\n    root.name = item.name;\n    root.description = item.description;\n    root.code = item.code;\n    root.icon = item.icon;\n    root.path = item.path;\n    root.id = item.id;\n    root.parentId = item.parentId;\n    result.push(root);\n    if (item.children) {\n      item.children.forEach(child => {\n        var childs = this.getListItemChild(child);\n        result.push(...childs);\n      });\n    }\n    return result;\n  }\n  updatePageData = () => {\n    var searchObject = {}\n    searchObject.keyword = ''\n    searchObject.pageIndex = this.state.page + 1\n    searchObject.pageSize = this.state.rowsPerPage\n    getAllByRoot().then(({ data }) => {\n      var itemList = [...data];\n      var list = [];\n      itemList.forEach(item => {\n        var items = this.getListItemChild(item);\n        list.push(...items);\n      });\n      this.setState({ itemList: list });\n    })\n  }\n  setPage = (page) => {\n    this.setState({ page }, function () {\n      this.updatePageData()\n    })\n  }\n\n  setRowsPerPage = (event) => {\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\n      this.updatePageData()\n    })\n  }\n\n  handleChangePage = (event, newPage) => {\n    this.setPage(newPage)\n  }\n\n  handleOKEditClose = () => {\n    this.setState(\n      {\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n      },\n      () => {\n        this.updatePageData()\n      }\n    )\n  }\n\n  handleDelete = (id) => {\n    this.setState({\n      id,\n      shouldOpenConfirmationDialog: true,\n    })\n  }\n  handleDialogClose = () => {\n    this.setState(\n      {\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false,\n        shouldOpenNotificationPopup: false,\n        data: [],\n      },\n      () => {\n        this.updatePageData()\n      }\n    )\n  }\n\n  handleOKEditClose = () => {\n    this.setState({\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDeleteAllDialog: false,\n    })\n    this.setPage(0)\n  }\n\n  handleDelete = (id) => {\n    this.setState({\n      id,\n      shouldOpenConfirmationDialog: true,\n    })\n  }\n\n  handleConfirmationResponse = () => {\n    if (this.state.itemList.length === 1 && this.state.page === 1) {\n      let count = this.state.page - 1\n      this.setState({\n        page: count,\n      })\n    }\n    deleteItem(this.state.id).then(() => {\n      this.updatePageData();\n      this.handleDialogClose()\n    })\n  }\n  handleEditItem = (item) => {\n    this.setState({\n      item: item,\n      shouldOpenEditorDialog: true,\n    })\n\n  }\n  handleDeleteButtonClick = () => {\n    if (\n      typeof this.state.data === 'undefined' ||\n      this.state.data.length === 0\n    ) {\n      this.setState({\n        shouldOpenNotificationPopup: true,\n        Notification: \"general.noti_check_data\"\n      })\n      // alert('Chưa chọn dữ liệu')\n    } else {\n      this.setState({ shouldOpenConfirmationDeleteAllDialog: true })\n    }\n  }\n  handleDeleteAll = (event) => {\n    this.handleDeleteList(this.state.data).then(() => {\n      this.updatePageData()\n      // this.handleDialogClose()\n    })\n  }\n\n  render() {\n    const { t, i18n } = this.props\n    let { keyword, shouldOpenNotificationPopup } = this.state\n    let TitlePage = t('menu.title')\n\n    let columns = [\n      {\n        title: t('general.action'),\n        field: 'custom',\n        align: 'left',\n        width: '120px',\n        headerStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"0px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"0px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        },\n        render: (rowData) => (\n          <MaterialButton\n            item={rowData}\n            onSelect={(rowData, method) => {\n              if (method === 0) {\n                getItemById(rowData.id).then(({ data }) => {\n                  if (data.parent === null) {\n                    data.parent = {}\n                  }\n                  this.setState({\n                    item: data,\n                    shouldOpenEditorDialog: true,\n                  })\n                })\n              } else if (method === 1) {\n                this.handleDelete(rowData.id)\n              } else {\n                alert('Call Selected Here:' + rowData.id)\n              }\n            }}\n          />\n        ),\n      },\n      {\n        title: t('menu.description'), field: 'description', align: 'left', width: '150',\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        },\n      },\n      {\n        title: t('menu.name'), field: 'name', width: '150',\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        },\n      },\n      {\n        title: t('menu.code'), field: 'code', align: 'left', width: '150',\n        headerStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        },\n      },\n\n    ]\n    return (\n      <div className=\"m-sm-30\">\n        <Helmet>\n          <title>{TitlePage} | {t('web_site')}</title>\n        </Helmet>\n        <div className=\"mb-sm-30\">\n          {/* <Breadcrumb routeSegments={[{ name: t('Supplier.title') }]} /> */}\n          <Breadcrumb\n            routeSegments={[\n              { name: t(\"Dashboard.manage\"), path: \"/directory/apartment\" },\n              { name: TitlePage },\n            ]}\n          />\n        </div>\n        <Grid container spacing={2} justify=\"space-between\">\n          <Grid item lg={3} md={3} xs={12} >\n            <Button\n              className=\"align-bottom mr-16 mb-16\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => this.handleEditItem(null)}\n            >\n              {t('general.add')}\n            </Button>\n            {/* <Button\n              className=\"align-bottom mb-16\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleDeleteButtonClick}\n            >\n              {t('general.delete')}\n            </Button> */}\n\n            {this.state.shouldOpenConfirmationDeleteAllDialog && (\n              <ConfirmationDialog\n                open={this.state.shouldOpenConfirmationDeleteAllDialog}\n                onConfirmDialogClose={this.handleDialogClose}\n                onYesClick={this.handleDeleteAll}\n                text={t('general.deleteAllConfirm')}\n                cancel={t('general.cancel')}\n                agree={t('general.agree')}\n              />\n            )}\n            {/* <TextField\n              label={t('Supplier.search')}\n              className=\"mb-16 mr-10\"\n              style={{ width: '20%' }}\n              type=\"text\"\n              name=\"keyword\"\n              value={keyword}\n              onChange={this.handleTextChange}\n              onKeyDown={this.handleKeyDownEnterSearch}\n            />\n            <Button\n              className=\"mb-16 mr-16 align-bottom\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => this.search(keyword)}\n            >\n              {t('general.search')}\n            </Button> */}\n          </Grid>\n          {/* <Grid item md={6} sm={12} xs={12} >\n            <FormControl fullWidth style={{marginTop:'6px'}}>\n                <Input\n                    className='search_box w-100'\n                    onChange={this.handleTextChange}\n                    onKeyDown={this.handleKeyDownEnterSearch}\n                    placeholder={t(\"Supplier.search\")}\n                    id=\"search_box\"\n                    startAdornment={\n                        <InputAdornment>\n                             <Link> <SearchIcon \n                            onClick={() => this.search(keyword)}\n                            style ={{position:\"absolute\",\n                            top:\"0\",\n                            right:\"0\"\n                          }} /></Link>\n                        </InputAdornment>\n                    }\n                />\n            </FormControl>\n          </Grid> */}\n          <Grid item xs={12}>\n            <div>\n              {this.state.shouldOpenEditorDialog && (\n                <MenuDialog\n                  t={t}\n                  i18n={i18n}\n                  handleClose={this.handleDialogClose}\n                  open={this.state.shouldOpenEditorDialog}\n                  handleOKEditClose={this.handleOKEditClose}\n                  item={this.state.item}\n                />\n              )}\n\n              {shouldOpenNotificationPopup && (\n                <NotificationPopup\n                  title={t('general.noti')}\n                  open={shouldOpenNotificationPopup}\n                  // onConfirmDialogClose={this.handleDialogClose}\n                  onYesClick={this.handleDialogClose}\n                  text={t(this.state.Notification)}\n                  agree={t('general.agree')}\n                />\n              )}\n\n              {this.state.shouldOpenConfirmationDialog && (\n                <ConfirmationDialog\n                  title={t(\"confirm\")}\n                  open={this.state.shouldOpenConfirmationDialog}\n                  onConfirmDialogClose={this.handleDialogClose}\n                  onYesClick={this.handleConfirmationResponse}\n                  text={t(\"DeleteConfirm\")}\n                  Yes={t(\"general.Yes\")}\n                  No={t(\"general.No\")}\n                />\n              )}\n            </div>\n            <MaterialTable\n              title={t('general.list')}\n              data={this.state.itemList}\n              columns={columns}\n              //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n              parentChildData={(row, rows) => {\n                var list = rows.find((a) => a.id === row.parentId)\n                return list\n              }}\n              localization={{\n                body: {\n                  emptyDataSourceMessage: `${t('general.emptyDataMessageTable')}`\n                },\n                toolbar: {\n                  // nRowsSelected: '${t('general.selects')}',\n                  nRowsSelected: `${t('general.selects')}`\n                }\n              }}\n\n              options={{\n                selection: false,\n                actionsColumnIndex: -1,\n                paging: false,\n                search: false,\n                rowStyle: (rowData, index) => ({\n                  backgroundColor: (index % 2 === 1) ? '#EEE' : '#FFF',\n                }),\n                maxBodyHeight: '450px',\n                minBodyHeight: '370px',\n                headerStyle: {\n                  backgroundColor: '#358600',\n                  color: '#fff',\n                },\n                padding: 'dense',\n                toolbar: false\n              }}\n              components={{\n                Toolbar: (props) => <MTableToolbar {...props} />,\n              }}\n              onSelectionChange={(rows) => {\n                this.setState({ data: rows })\n              }}\n              localization={{\n                body: {\n                  emptyDataSourceMessage: `${t(\n                    \"general.emptyDataMessageTable\"\n                  )}`,\n                },\n              }}\n            />\n            <TablePagination\n              align=\"left\"\n              className=\"px-16\"\n              rowsPerPageOptions={[1, 2, 3, 5, 10, 25]}\n              component=\"div\"\n              labelRowsPerPage={t('general.rows_per_page')}\n              labelDisplayedRows={({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\n              count={this.state.totalElements}\n              rowsPerPage={this.state.rowsPerPage}\n              page={this.state.page}\n              backIconButtonProps={{\n                'aria-label': 'Previous Page',\n              }}\n              nextIconButtonProps={{\n                'aria-label': 'Next Page',\n              }}\n              onChangePage={this.handleChangePage}\n              onChangeRowsPerPage={this.setRowsPerPage}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}