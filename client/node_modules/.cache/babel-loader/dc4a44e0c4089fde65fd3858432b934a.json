{"ast":null,"code":"import toDate from \"../toDate/index.js\";\nimport differenceInCalendarISOWeekYears from \"../differenceInCalendarISOWeekYears/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport subISOWeekYears from \"../subISOWeekYears/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name differenceInISOWeekYears\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Get the number of full ISO week-numbering years between the given dates.\r\n *\r\n * @description\r\n * Get the number of full ISO week-numbering years between the given dates.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * - The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.\r\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\r\n *   This change makes the name consistent with\r\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\r\n *\r\n * @param {Date|Number} dateLeft - the later date\r\n * @param {Date|Number} dateRight - the earlier date\r\n * @returns {Number} the number of full ISO week-numbering years\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\r\n * var result = differenceInISOWeekYears(\r\n *   new Date(2012, 0, 1),\r\n *   new Date(2010, 0, 1)\r\n * )\r\n * //=> 1\r\n */\n\nexport default function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarISOWeekYears(dateLeft, dateRight));\n  dateLeft = subISOWeekYears(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastISOWeekYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","map":null,"metadata":{},"sourceType":"module"}