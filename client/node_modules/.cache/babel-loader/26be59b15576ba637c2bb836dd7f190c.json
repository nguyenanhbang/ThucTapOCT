{"ast":null,"code":"import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\r\n * @name differenceInCalendarISOWeeks\r\n * @category ISO Week Helpers\r\n * @summary Get the number of calendar ISO weeks between the given dates.\r\n *\r\n * @description\r\n * Get the number of calendar ISO weeks between the given dates.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} dateLeft - the later date\r\n * @param {Date|Number} dateRight - the earlier date\r\n * @returns {Number} the number of calendar ISO weeks\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\r\n * var result = differenceInCalendarISOWeeks(\r\n *   new Date(2014, 6, 21),\r\n *   new Date(2014, 6, 6)\r\n * )\r\n * //=> 3\r\n */\n\nexport default function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft);\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight);\n  var timestampLeft = startOfISOWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\n  var timestampRight = startOfISOWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","map":null,"metadata":{},"sourceType":"module"}