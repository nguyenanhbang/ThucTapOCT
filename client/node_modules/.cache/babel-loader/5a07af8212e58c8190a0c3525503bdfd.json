{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ToolbarText from './ToolbarText';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\n\nvar ToolbarButton = function ToolbarButton(_ref) {\n  var classes = _ref.classes,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? null : _ref$className,\n      label = _ref.label,\n      selected = _ref.selected,\n      variant = _ref.variant,\n      align = _ref.align,\n      typographyClassName = _ref.typographyClassName,\n      other = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"label\", \"selected\", \"variant\", \"align\", \"typographyClassName\"]);\n\n  return React.createElement(Button, _extends({\n    variant: \"text\",\n    className: clsx(classes.toolbarBtn, className)\n  }, other), React.createElement(ToolbarText, {\n    align: align,\n    className: typographyClassName,\n    variant: variant,\n    label: label,\n    selected: selected\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ToolbarButton.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  classes: PropTypes.any.isRequired,\n  className: PropTypes.string,\n  innerRef: PropTypes.any\n} : void 0;\nToolbarButton.defaultProps = {\n  className: ''\n};\nexport var styles = createStyles({\n  toolbarBtn: {\n    padding: 0,\n    minWidth: '16px',\n    textTransform: 'none'\n  }\n});\nexport default withStyles(styles, {\n  name: 'MuiPickersToolbarButton'\n})(ToolbarButton);","map":null,"metadata":{},"sourceType":"module"}