{"ast":null,"code":"import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name endOfDecade\r\n * @category Decade Helpers\r\n * @summary Return the end of a decade for the given date.\r\n *\r\n * @description\r\n * Return the end of a decade for the given date.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the original date\r\n * @returns {Date} the end of a decade\r\n * @param {Object} [options] - an object with options.\r\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\r\n * @throws {TypeError} 1 argument required\r\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\r\n *\r\n * @example\r\n * // The end of a decade for 12 May 1984 00:00:00:\r\n * const result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))\r\n * //=> Dec 31 1989 23:59:59.999\r\n */\n\nexport default function endOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 11, 31);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","map":null,"metadata":{},"sourceType":"module"}